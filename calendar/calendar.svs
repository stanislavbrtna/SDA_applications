#*
 * Calendar v.3
 *  - buggy behaviour with empty data file fixed
 *  - EN translation
 *  - moved to SVS 1.0 arrays
 *
 * Kalendář verze 2.2
 *
 * Novinky: * Smazat je šedé u nové události
 *          * Přidána podpora pro timestamp
 *          * Opravena chyba která rozbije datový soubor při smazání poslední události.
 *          * přidán systémový error pro rozbitej soubor
 *
*#

function init {
  print("init: cal v.3.1");
  sys.os.checkVer(700);
  sys.os.setSingular();
  #sys.profiler(1);
  #sys.dbg(1);
  HS_init();
  day_init();
  edit_init();

  sys.os.gui.setMainScr(hs_scr);
  mode = 1;

  if (not sys.fs.exists("cal.dat")) {
    sys.fs.conf.open("cal.dat");
    sys.fs.conf.write("first", "-1");
  } else {
    sys.fs.conf.open("cal.dat");
  }



  if (not sys.fs.conf.exists("first")) {
    sys.fs.conf.write("first", "0");
  }
  if (not sys.fs.conf.exists("f_ver")) {
    sys.fs.conf.write("f_ver", "1");
  }
}


 # month screen
function HS_init {

  hs_scr = sys.gui.addScreen();

  if (sys.os.getLang() == SVP_LANG_CZ) {
    sys.gui.addText(0, 0, 8, 1, "Kalendář", hs_scr);
  } else {
    sys.gui.addText(0, 0, 8, 1, "Calendar", hs_scr);
  }

  hs_select = sys.gui.addButton(1, 1, 6, 2, "MM. YYYY", hs_scr);

  hs_prev = sys.gui.addButton(7, 1, 8, 2, "<", hs_scr);

  hs_next = sys.gui.addButton(8, 1, 9, 2, ">", hs_scr);

  hs_cal = sys.w.cal.init(sys.time.getYear(), sys.time.getMonth(), sys.time.getDay());

  if (sys.os.getLang() == SVP_LANG_CZ) {
    hs_today = sys.gui.addButton(6, 12, 9, 13, "Dnes", hs_scr);
  } else {
    hs_today = sys.gui.addButton(6, 12, 9, 13, "Today", hs_scr);
  }
  hs_new = sys.gui.addButton(1, 12, 2, 13, "+", hs_scr);

  sys.gui.setScreen(hs_cal, hs_scr);

  sys.gui.setXYXY(hs_cal, 0, 2, 10, 12); # kalendář je 7x7, ale je možnost ho nafouknout

  sys.gui.setXcell(hs_cal, 45);
  sys.gui.setYcell(hs_cal, 45);

  hs_reload = 1;

  hs_year = sys.time.getYear();
  hs_month = sys.time.getMonth();
  hs_day = sys.time.getDay();

  hs_date_ov = 0;

  HS_new(0);
}


function HS_reload {
  # reload month button
  sys.gui.setStr(hs_select, hs_day + ". " + hs_month + ". " + hs_year);
  # reload cal widget
  sys.w.cal.select(hs_year, hs_month, hs_day);
  # reload událostí

  cfg_first = sys.fs.conf.readInt("first", 0);

  if (cfg_first == -1){
    return;
  }

  #max událostí je 7000
  for(n = cfg_first; n < (cfg_first + 7000); n = sys.fs.conf.readInt(n + "_next", (-1));) {
    if(sys.fs.conf.exists(n + "_name")) {
      p_timestamp = sys.fs.conf.readInt(n + "_timestamp", 0);
      p_day = sys.time.getTsDay(p_timestamp);
      p_mon = sys.time.getTsMonth(p_timestamp);
      p_year = sys.time.getTsYear(p_timestamp);

      if (p_day == 0 or p_mon == 0 or p_year == 0) {
        sys.os.error("data file error (zero val)");
        break;
      }

      if (p_year == hs_year and p_mon == hs_month and hs_day != p_day) {
        sys.w.cal.mark(p_day);
      }

      if (sys.fs.conf.readInt(n + "_next", (-1)) == (-1)) {
        #print("end of list: " + n);
        break;
      }
    } else {
      sys.os.error("Data file error!\n(missing record " + n + ")");
      break;
    }
  }
}

function next_id {
  cfg_first = sys.fs.conf.readInt("first", 0);

  if (cfg_first == -1){
    sys.fs.conf.write("first", "0");
    return 0;
  }

  #max událostí je 7000
  for(n = cfg_first; n < (cfg_first + 7000); n = sys.fs.conf.readInt(n + "_next", (-1));) {
    if(sys.fs.conf.exists(n + "_name")) {

      if (sys.fs.conf.readInt(n + "_next", (-1)) == (-1)) {
        print("end of list: " + n);
        sys.fs.conf.write(n + "_next","" + n + 1);

        return n + 1;
      }
    } else {
      sys.os.error("Data file error!\n(missing record " + n + ")");
      break;
    }
  }
}

function HS_new {
  sys.gui.setVisible(hs_new, arg0);
}

function HS_update {
  if (hs_reload == 1) {
    hs_reload = 0;
    HS_reload();
  }

  if (sys.gui.getEvent(hs_select) == 3) {
    hs_date_ov = sys.o.date.add(hs_year, hs_month, hs_day);
  }
  sys.gui.setEvent(hs_select, 0);

  sys.o.date.update(hs_date_ov);

  if (sys.o.date.getOk(hs_date_ov)) {
    hs_day = sys.o.date.getDay(hs_date_ov);
    hs_month = sys.o.date.getMon(hs_date_ov);
    hs_year = sys.o.date.getYr(hs_date_ov);
    sys.o.date.clrOk(hs_date_ov);
    hs_reload = 1;
    HS_new(1);
  }

  if (sys.gui.getEvent(hs_next) == 3) {
    if (hs_month < 12) {
      hs_month = hs_month + 1;
    } else {
      hs_year = hs_year + 1;
      hs_month = 1;
    }
    hs_reload = 1;
    HS_new(0);
  }
  sys.gui.setEvent(hs_next, 0);

  if (sys.gui.getEvent(hs_prev) == 3) {
    if (hs_month > 1) {
      hs_month = hs_month - 1;
    } else {
      hs_year = hs_year - 1;
      hs_month = 12;
    }
    hs_reload = 1;
    HS_new(0);
  }
  sys.gui.setEvent(hs_prev, 0);

  if (sys.gui.getEvent(hs_today) == 3) {
    hs_reload = 1;

    hs_year = sys.time.getYear();
    hs_month = sys.time.getMonth();
    hs_day = sys.time.getDay();

    HS_new(0);
  }
  sys.gui.setEvent(hs_today, 0);

  upd_ret = sys.w.cal.update();

  if(upd_ret == 1) {
    hs_day = sys.w.cal.getDay();
    hs_reload = 1;
    HS_new(1);
  }

  if(upd_ret == 2) {
    day_switch();
  }

  if(sys.gui.getEvent(hs_new) == 3) {
    edit_new();
  }
  sys.gui.setEvent(hs_new, 0);

}

function hs_switch {
  mode = 1;
  sys.os.gui.setMainScr(hs_scr);
  hs_reload = 1;
}

 #day screen
function day_switch {
  #Switch to day
  mode = 2;
  day_reload = 1;
  sys.os.gui.setMainScr(day_scr);

  sys.os.hideKbd();

  if(day_loaded == 0) {
    load_days();
    day_loaded = 1;
  } else {
    remove_days();
    load_days();
  }
}

function load_days {
  print("loading days");
  # načtení událostí dne do pole
  cfg_first = sys.fs.conf.readInt("first", 0);
  day_cnt = 0;

  if (cfg_first == -1) {
    return;
  }

  # max událostí je 7000
  for(n = cfg_first; n < (cfg_first + 7000); n = sys.fs.conf.readInt(n + "_next", (-1));) {
    if(sys.fs.conf.exists(n + "_name")) {
      p_timestamp = sys.fs.conf.readInt(n + "_timestamp", 0);
      p_day = sys.time.getTsDay(p_timestamp);
      p_mon = sys.time.getTsMonth(p_timestamp);
      p_year = sys.time.getTsYear(p_timestamp);

      if (p_year == hs_year and p_mon == hs_month and p_day == hs_day) {
        day_list_id[day_cnt] = n;
        day_cnt = day_cnt + 1;
      }

      if (sys.fs.conf.readInt(n + "_next", (-1)) == (-1)) {
        print("end of list: " + n);
        break;
      }
    } else {
      sys.os.error("Data file error!\n(missing record " + n + ")");
      break;
    }
  }

  d_ar_cnt = 0;

  for(i = 0; i < 24; i = i + 1;) {
    for(n = 0; n < day_cnt; n = n + 1;) {
      if (sys.fs.conf.readInt(day_list_id[n] + "_s_hr", 0) == i) {
        #array jsou číslovaný stejně, jen se mění pozice dle času
        if(day_list[n] == 0) {
          if (sys.fs.conf.readInt(day_list_id[n] + "_s_min", 0) < 10) {
            time=sys.fs.conf.read(day_list_id[n]+"_s_hr")+":0"+sys.fs.conf.readInt(day_list_id[n]+"_s_min",0);
          }else{
            time=sys.fs.conf.read(day_list_id[n]+"_s_hr")+":"+sys.fs.conf.read(day_list_id[n]+"_s_min");
          }

          if (sys.fs.conf.readInt(day_list_id[n]+"_e_min", 0)<10){
            time2=sys.fs.conf.read(day_list_id[n]+"_e_hr")+":0"+sys.fs.conf.readInt(day_list_id[n]+"_e_min", 0);
          }else{
            time2=sys.fs.conf.read(day_list_id[n]+"_e_hr")+":"+sys.fs.conf.read(day_list_id[n]+"_e_min");
          }

          prac=time+" "+sys.fs.conf.read(day_list_id[n]+"_name")+"\n"+time2;
          day_list[n] = sys.gui.addButton(1,1+2*d_ar_cnt, 8,1+2*(d_ar_cnt+1), prac,day_scr_l);
          print("add:"+sys.fs.conf.read(day_list_id[n]+"_name"));
          d_ar_cnt=d_ar_cnt+1;
        }
      }
    }
  }
}

function remove_days{
  print("removing days");
  for(n = 0; n < day_cnt; n = n + 1;) {
    #array jsou číslovaný stejně, jen se mění pozice dle času
    if (day_list[n] != 0) {
      sys.gui.destroy(day_list[n]);
      day_list[n] = 0;
    }
  }

}

function day_reloader{
  sys.gui.setStr(day_date, hs_day+". "+hs_month+". "+hs_year);
}

function day_init{

  day_scr= sys.gui.addScreen();

  day_date=sys.gui.addButton(1, 1, 6, 2, "DD. MM. YYYY", day_scr );

  day_new=sys.gui.addButton(1, 11, 3, 13, "+", day_scr );

  day_scr_l= sys.gui.addScreen();

  sys.gui.setScreen(day_scr_l, day_scr);

  sys.gui.setXYXY(day_scr_l, 0, 2,9,11 );

  day_sld= sys.gui.addSliderV(9,2,10,11,100, 1,day_scr);

  day_reload=1;

  array day_list[35];
  array day_list_id[35];

  day_loaded=0;
}

function day_update{
  if (sys.gui.getEvent(day_date)==3){
    hs_switch();
  }
  sys.gui.setEvent(day_date,0);

  if (sys.gui.getEvent(day_new)==3){
    edit_new();
  }
  sys.gui.setEvent(day_new,0);

  for(n=0; n<day_cnt; n=n+1;){
    if (day_list[n]!=0){
      if (sys.gui.getEvent(day_list[n])==3){
        file_store_id= day_list_id[n];
        edit_existing();
      }
      sys.gui.setEvent(day_list[n],0);
    }
  }

  sys.gui.setYscroll(day_scr_l, sys.gui.getValue(day_sld)*5);

  if(sys.btnGetEv(BTN_UP)==1){
    if (sys.gui.getValue(day_sld)>10){
      sys.gui.setValue(day_sld,sys.gui.getValue(day_sld)-10);
    }else{
      sys.gui.setValue(day_sld,0);
    }
  }
  sys.btnClrEv(BTN_UP);

  if(sys.btnGetEv(BTN_DOWN)==1){
    if (sys.gui.getValue(day_sld)<90){
      sys.gui.setValue(day_sld,sys.gui.getValue(day_sld)+10);
    }else{
      sys.gui.setValue(day_sld,100);
    }
  }
  sys.btnClrEv(BTN_DOWN);

  if(day_reload==1){
    day_reloader();
    day_reload=0;
  }
}

 # edit screen

function edit_init{
  edit_scr = sys.gui.addScreen();
  e_ts = 0;
  e_t_stop = 0;
  edit_date_ov = 0;
  edit_des_p = 0;


  if (sys.os.getLang() == SVP_LANG_CZ) {
    sys.gui.addText(1, 0, 9, 1, "Název:", edit_scr);
  } else {
    sys.gui.addText(1, 0, 9, 1, "Name:", edit_scr);
  }

  edit_name=sys.gui.addText(1,1,9,2, "NAME", edit_scr);

  edit_date=sys.gui.addButton(1,2,5,3, "DATE", edit_scr);

  #edit_allDay=sys.gui.addButton(1,3,5,4, "Celý den", edit_scr);

  if (sys.os.getLang() == SVP_LANG_CZ) {
    edit_start = sys.gui.addButton(7,2,9,3, "OD:", edit_scr);
    edit_stop = sys.gui.addButton(7,3,9,4, "DO:", edit_scr);
    edit_store=sys.gui.addButton(1,13,5,14, "Uložit", edit_scr);
    edit_remove=sys.gui.addButton(1,12,5,13, "Smazat", edit_scr);
    edit_back=sys.gui.addButton(6,13,9,14, "Zpět", edit_scr);
    sys.gui.addText(1,4,9,5, "Popis:", edit_scr);
  } else {
    sys.gui.addText(1,4,9,5, "Description:", edit_scr);
    edit_start = sys.gui.addButton(7,2,9,3, "From:", edit_scr);
    edit_stop = sys.gui.addButton(7,3,9,4, "To:", edit_scr);
    edit_store=sys.gui.addButton(1,13,5,14, "Save", edit_scr);
    edit_remove=sys.gui.addButton(1,12,5,13, "Delete", edit_scr);
    edit_back=sys.gui.addButton(6,13,9,14, "Back", edit_scr);
  }

  edit_descr=sys.gui.addText(1,5,9,12, "Descr", edit_scr);

  #mazací obrazovka

  ed_rm_scr=sys.gui.addScreen();

  if (sys.os.getLang() == SVP_LANG_CZ) {
    sys.gui.addText(2,3,9,4, "Vymazat událost?", ed_rm_scr);
    ed_rm_ok = sys.gui.addButton(2,4,4,5, "Ano", ed_rm_scr);
    ed_rm_no = sys.gui.addButton(6,4,8,5, "Ne", ed_rm_scr);
    ed_rm_cancel = sys.gui.addButton(3,6,7,7, "Storno", ed_rm_scr);
  } else {
    sys.gui.addText(2,3,9,4, "Delete event?", ed_rm_scr);
    ed_rm_ok = sys.gui.addButton(2,4,4,5, "Yes", ed_rm_scr);
    ed_rm_no = sys.gui.addButton(6,4,8,5, "No", ed_rm_scr);
    ed_rm_cancel = sys.gui.addButton(3,6,7,7, "Cancel", ed_rm_scr);
  }
  sys.gui.setTexEd(edit_name, 1);
  sys.gui.setTexEd(edit_descr, 1);
}

function edit_new{

  sys.gui.setYscroll(edit_scr,0);

  hs_hrStart=sys.time.getHr();
  hs_minStart=0;

  hs_hrStop=sys.time.getHr()+1;
  hs_minStop=0;

  sys.gui.setStr(edit_name, "");

  sys.gui.setStr(edit_date, hs_day+". "+hs_month+". "+hs_year);

  sys.gui.setStr(edit_start, hs_hrStart+":00");
  sys.gui.setStr(edit_stop, hs_hrStop+":00");

  mode=3;
  sys.os.gui.setMainScr(edit_scr);

  ed_changed=0;
  sys.gui.setGrayout(edit_store, 1);
  sys.gui.setGrayout(edit_remove, 1);

  EdTxName="";
  EdTxDescr="";

  file_store_id=-1;
}

function edit_existing{

  sys.gui.setYscroll(edit_scr,0);

  hs_hrStart=sys.fs.conf.readInt(file_store_id+"_s_hr", 0);
  hs_minStart=sys.fs.conf.readInt(file_store_id+"_s_min", 0);

  hs_hrStop=sys.fs.conf.readInt(file_store_id+"_e_hr", 0);
  hs_minStop=sys.fs.conf.readInt(file_store_id+"_e_min", 0);

  sys.gui.setStr(edit_name, "");

  p_timestamp = sys.fs.conf.readInt(file_store_id + "_timestamp", 0);
  hs_day = sys.time.getTsDay(p_timestamp);
  hs_month = sys.time.getTsMonth(p_timestamp);
  hs_year = sys.time.getTsYear(p_timestamp);

  sys.gui.setStr(edit_date, hs_day+". "+hs_month+". "+hs_year);

  if (hs_minStart < 10){
    sys.gui.setStr(edit_start, hs_hrStart + ":0" + hs_minStart);
  } else {
    sys.gui.setStr(edit_start, hs_hrStart + ":" + hs_minStart);
  }

  if (hs_minStop  < 10){
    sys.gui.setStr(edit_stop, hs_hrStop+":0" + hs_minStop);
  } else {
    sys.gui.setStr(edit_stop, hs_hrStop+":" + hs_minStop);
  }

  mode = 3;
  sys.os.gui.setMainScr(edit_scr);

  ed_changed = 0;
  sys.gui.setGrayout(edit_store, 1);
  sys.gui.setGrayout(edit_remove, 0);

  EdTxName = sys.fs.conf.read(file_store_id + "_name");
  EdTxDescr = sys.fs.conf.read(file_store_id + "_descr");
}


function edit_update{

  EdTxName = sys.os.gui.handleText(edit_name, EdTxName);
  EdTxDescr = sys.os.gui.handleText(edit_descr, EdTxDescr);

  if (sys.gui.getEvent(edit_start) == 3) {
    e_ts = sys.o.time.add();
    sys.o.time.set(e_ts, hs_hrStart, hs_minStart);
  }
  sys.gui.setEvent(edit_start, 0);

  if (sys.gui.getEvent(edit_stop) == 3) {
    e_t_stop = sys.o.time.add();
    sys.o.time.set(e_t_stop, hs_hrStop, hs_minStop);
  }
  sys.gui.setEvent(edit_stop, 0);

  sys.o.time.update(e_ts);
  sys.o.time.update(e_t_stop);

  if(sys.o.time.getOk(e_ts)) {
    hs_hrStart = sys.o.time.getHr(e_ts);
    hs_minStart = sys.o.time.getMin(e_ts);
    sys.o.time.clrOk(e_ts);
    local minp;
    if (hs_minStart < 10) {
      minp = "0" + hs_minStart;
    } else {
    minp = hs_minStart;
    }
    sys.gui.setStr(edit_start, hs_hrStart + ":" + minp);
    ed_changed = 1;
  }

  if(sys.o.time.getOk(e_t_stop)) {
    hs_hrStop = sys.o.time.getHr(e_t_stop);
    hs_minStop = sys.o.time.getMin(e_t_stop);
    local minp;
    sys.o.time.clrOk(e_t_stop);
    if (hs_minStop < 10) {
      minp = "0" + hs_minStop;
    } else {
      minp = hs_minStop;
    }
    sys.gui.setStr(edit_stop, hs_hrStop + ":" + minp);
    ed_changed = 1;
  }

  if (sys.gui.getEvent(edit_date) == 3) {
    edit_date_ov = sys.o.date.add(hs_year, hs_month, hs_day);
  }
  sys.gui.setEvent(edit_date, 0);

  sys.o.date.update(edit_date_ov);

  if (sys.o.date.getOk(edit_date_ov)) {
    hs_day = sys.o.date.getDay(edit_date_ov);
    hs_month = sys.o.date.getMon(edit_date_ov);
    hs_year = sys.o.date.getYr(edit_date_ov);
    sys.o.date.clrOk(edit_date_ov);
    sys.gui.setStr(edit_date, hs_day + ". " + hs_month + ". " + hs_year);
    ed_changed = 1;
  }

  if((sys.gui.getValue(edit_name) == 1) + (sys.gui.getValue(edit_descr) == 1)) {
    ed_changed = 1;
  }

  if (ed_changed == 1) {
    sys.gui.setGrayout(edit_store, 0);
    ed_changed = 0;
  }

  if (sys.gui.getEvent(edit_back) == 3) {
    day_switch();
  }
  sys.gui.setEvent(edit_back, 0);

  if (sys.gui.getEvent(edit_store) == 3) {
    local newfile;
    newfile = 0;
    if (file_store_id == (-1)) {
      file_store_id = next_id();
      newfile = 1;
      #uzavření seznamu
    }

    sys.fs.conf.write(file_store_id + "_name", EdTxName);
    sys.fs.conf.write(file_store_id + "_descr", EdTxDescr);

    hs_timestamp = sys.time.setTs(hs_year, hs_month, hs_day, hs_hrStart, hs_minStop, 0);

    sys.fs.conf.write(file_store_id + "_timestamp", "" + hs_timestamp);

    sys.fs.conf.write(file_store_id + "_s_hr", "" + hs_hrStart);
    sys.fs.conf.write(file_store_id + "_s_min", "" + hs_minStart);

    sys.fs.conf.write(file_store_id + "_e_hr", "" + hs_hrStop);
    sys.fs.conf.write(file_store_id + "_e_min", "" + hs_minStop);

    # next musí bejt až na konci, zrychlí to načítání
    # nemusí se pak znovu prohledávat celej soubor
    if (newfile) {
      sys.fs.conf.write(file_store_id + "_next", "-1");
    }
    day_switch();
  }
  sys.gui.setEvent(edit_store, 0);

  if ((sys.gui.getValue(edit_descr) == 1) * (edit_des_p == 0)) {
    sys.gui.setYscroll(edit_scr, 160);
    sys.gui.setModif(edit_scr);
  } else {
    if ((sys.gui.getValue(edit_descr) == 0) * (edit_des_p == 1)) {
      sys.gui.setYscroll(edit_scr, 0);
      sys.gui.setModif(edit_scr);
    }
  }

  edit_des_p=sys.gui.getValue(edit_descr);

  if (sys.gui.getEvent(edit_remove)==3){
    sys.os.gui.setMainScr(ed_rm_scr);
  }
  sys.gui.setEvent(edit_remove,0);

  if (sys.gui.getEvent(ed_rm_cancel)==3){
    sys.os.gui.setMainScr(edit_scr);
  }
  sys.gui.setEvent(ed_rm_cancel,0);

  if (sys.gui.getEvent(ed_rm_no)==3){
    sys.os.gui.setMainScr(edit_scr);
  }
  sys.gui.setEvent(ed_rm_no,0);

  if (sys.gui.getEvent(ed_rm_ok)==3){
    if (file_store_id != (-1)) {
      #označíme ToBeRemoved, asi jen tak pro efekt
      sys.fs.conf.write(file_store_id+"_tbr", "1");

      #pokud je první
      if (sys.fs.conf.readInt("first", 0) == file_store_id) {
        #tady je problem, že tu první položku ze spojovýho seznamu neodpojíme
        #bude třeba mazat name, aby se nenačítala, ale funkci na mazání z ini zatim nemam
        sys.fs.conf.write("first", sys.fs.conf.read(file_store_id+"_next"));
      } else {
        #jinak potřebujem najít předchozí

        cfg_first=sys.fs.conf.readInt("first", 0);

        #max událostí je 7000
        for(n=cfg_first;n<(cfg_first+7000);n=sys.fs.conf.readInt(n+"_next", (-1));){
          if(sys.fs.conf.exists(n+"_name")){

            if (sys.fs.conf.readInt(n+"_next", (-1))==(-1)){
              print("end of list: "+n);
              break;
            }

            if (sys.fs.conf.readInt(n+"_next", (-1)) == file_store_id) {
              sys.fs.conf.write(n + "_next","" + sys.fs.conf.readInt(file_store_id + "_next", (-1)));
              break;
            }

          } else {
            sys.os.error("Data file error!\n(missing record " + n + ")");
            break;
          }
        }
      }
    }
    day_switch();
  }
  sys.gui.setEvent(ed_rm_ok,0);

}

function update {
  if(mode == 1) {
    HS_update();
  }

  if(mode == 2) {
    day_update();
  }

  if(mode == 3) {
    edit_update();
  }
}

function exit{
  sys.gui.destroy(hs_scr);
  sys.gui.destroy(day_scr);
  sys.gui.destroy(day_scr_l);
  sys.gui.destroy(edit_scr);
  sys.gui.destroy(ed_rm_scr);
  sys.fs.conf.close();
}

