 #sda commander
 # todo: move, view
function init {
  sys.os.checkVer(800);
  sys.gui.setRelInit(1);
  scr = sys.gui.addScreen();
  sys.os.gui.setMainScr(scr);
  sys.gui.addText(1, 0, 8, 1, "SDA Commander 1.3.1", scr);
  file_scr = sys.gui.addScreen();
  scrollbar = sys.gui.addSliderV(9, 2, 1, 9, 100, 0, scr);

  sys.gui.setScreen(file_scr, scr);
  sys.gui.setXYXY(file_scr, 0, 2, 9, 9);

  bUp = sys.gui.addButton(0, 1, 1, 1, "/\\", scr);
  bData = sys.gui.addButton(2, 1, 2, 1, "Data", scr);
  bApps = sys.gui.addButton(4, 1, 2, 1, "Apps", scr);

  # move, mkdir, launch, view, edit
  bCopy = sys.gui.addButton(0, 11, 3, 1, "Copy", scr);
  #bMove = sys.gui.addButton(3, 11, 3, 1, "Move", scr);
  bRename = sys.gui.addButton(3, 11, 4, 1, "Rename", scr);
  bMkdir = sys.gui.addButton(0, 12, 3, 1, "MkDir", scr);
  #bView = sys.gui.addButton(3, 12, 3, 1, "View", scr);
  bRemove = sys.gui.addButton(3, 12, 4, 1, "Remove", scr);

  array fScrBtns[200];
  array path[30];

  rldFiles();
  copyFname = "";
  renameOp  = -1;
  mkdirOp   = -1;
  ppmOvr = -1;

  sys.gui.setGrayout(bUp, 1);

  pasteOvr = -1;
  remOvr = -1;
}

function getsize {
  local x;
  sys.fs.open(arg0);
  x = sys.fs.size();
  sys.fs.close();

  return x;
}

function rldFiles {
  sys.gui.destroy(file_scr);
  for (x = 0; x < 200; x++;) {
    fScrBtns[x] = 0;
  }

  file_scr = sys.gui.addScreen();

  sys.gui.setScreen(file_scr, scr);
  sys.gui.setXYXY(file_scr, 0, 2, 9, 9);

  i = 0;

  #load directory
  for(findfil = sys.fs.find("", "."); findfil != ""; findfil = sys.fs.findNext();) {
    fScrBtns[i] = findfil;
    i++;
  }

  numOfFiles = i;

  #sortOutDirs
  lastdir = 0;
  for(i = 0; i < numOfFiles; i++;) {
    if (sys.fs.isDir(fScrBtns[i])) {
      prac = fScrBtns[lastdir];

      fScrBtns[lastdir] = fScrBtns[i];

      fScrBtns[i] = prac;

      lastdir++;
    }
  }

  sortstring = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";

  # alphabetical sort dirs
  {
    local sorted;
    local i;
    local b;
    local sortchar;
    sorted = 0;
    for(i = 1; i < len(sortstring); i++;) {
      sortchar = getcp(sortstring, i);
      for(b = sorted; b < lastdir; b++;){
        if (getcp(fScrBtns[b], 1) == sortchar) {
          local prac;
          prac = fScrBtns[b];
          fScrBtns[b] = fScrBtns[sorted];
          fScrBtns[sorted] = prac;
          sorted++;
        }
      }
    }
  }

  # alphabetical sort files
  {
    local sorted;
    local i;
    local b;
    local sortchar;
    sorted = lastdir;
    for(i = 1; i < len(sortstring); i++;) {
      sortchar = getcp(sortstring, i);
      for(b = sorted; b < numOfFiles; b++;){
        if (getcp(fScrBtns[b], 1) == sortchar) {
          local prac;
          prac = fScrBtns[b];
          fScrBtns[b] = fScrBtns[sorted];
          fScrBtns[sorted] = prac;
          sorted++;
        }
      }
    }
  }

  #load sorted buttons
  for(i = 0; i < numOfFiles; i++;) {
    findfil =  fScrBtns[i];
    fScrBtns[i] = sys.gui.addButton(0, i, 5, 1, findfil, file_scr);

    if (sys.fs.isDir(findfil)) {
      sys.gui.addText(6, i, 2, 1, "(Dir)", file_scr);
    } else {
      sys.gui.addText(6, i, 4, 1, "" + getsize(findfil) + "B", file_scr);
    }
  }

  sys.gui.setValue(scrollbar, 0);

  if (i > 9) {
    sys.gui.setParam(scrollbar, 32 * i - 8 * 32);
    sys.gui.setGrayout(scrollbar, 0);
  } else {
    sys.gui.setGrayout(scrollbar, 1);
  }

  selected = -1;
}

function getPath {
  local i;
  local pathStr;
  pathStr = "";
  for (i = 0; i < upCount; i++;) {
    pathStr += path[i] + "/";
  }

  return pathStr;
}

function tryOpen {
  # arg0 -> fname
  extension = getcp(arg0, len(arg0) - 2) + getcp(arg0, len(arg0) -1) + getcp(arg0, len(arg0));
  print(extension);
  if (extension == "svs") {
    sys.os.subProcCWD(1);
    sys.os.subProcess(arg0, "", 0, 0, 0);
  }

  if (extension == "txt") {
    sys.os.subProcCWD(0);
    sys.os.subProcess("notepad/notepad.svs", "", getPath()+arg0, 0, 0);
  }

  if (extension == "ppm" or extension == "p16") {
    showPpm(arg0);
  }
}

function updFiles {
  local x;
  for (x = 0; x < numOfFiles; x++;) {
    if (sys.gui.getEventC(fScrBtns[x]) == EV_RELEASED) {

        if (selected == -1) {
          sys.gui.setSelect(fScrBtns[x], 1);
          selected = x;
        } else {
        if (selected == x) {
          if (sys.fs.isDir(sys.gui.getStr(fScrBtns[x]))) {
            sys.fs.chDir(sys.gui.getStr(fScrBtns[x]));
            path[upCount] = sys.gui.getStr(fScrBtns[x]);
            rldFiles();
            sys.gui.setGrayout(bUp, 0);
            upCount++;
          } else {
            print ("clicked:" + sys.gui.getStr(fScrBtns[x]));
            tryOpen(sys.gui.getStr(fScrBtns[x]));
          }
        } else {
          sys.gui.setSelect(fScrBtns[selected], 0);
          sys.gui.setSelect(fScrBtns[x], 1);
          selected = x;
        }
      }
    }
  }
}

function update {
  updFiles();
  sys.gui.setYscroll(file_scr, sys.gui.getValue(scrollbar) - 8);
  buttonScroll(scrollbar, 16);

  if (sys.gui.getEventC(bUp) == EV_RELEASED) {
    sys.fs.chDir("..");
    rldFiles();
    upCount--;
    if (upCount == 0){
      sys.gui.setGrayout(bUp, 1);
    }
  }

  if (sys.gui.getEventC(bData) == EV_RELEASED) {
    sys.fs.chDir();
    sys.gui.setGrayout(bUp, 1);
    upCount = 0;
    rldFiles();
  }

  if (sys.gui.getEventC(bApps) == EV_RELEASED) {
    sys.fs.chDir(1);
    sys.gui.setGrayout(bUp, 1);
    upCount = 0;
    rldFiles();
  }

  if (sys.gui.getEventC(bCopy) == EV_RELEASED) {
    if (copyFname == "") {
      if (selected != -1) {
        copyFname = sys.gui.getStr(fScrBtns[selected]);
        sys.fs.copySource(copyFname);
        sys.gui.setStr(bCopy, "Paste");
      }
    } else {
      pasteOvInit();
    }
  }

  if (sys.gui.getEventC(bRemove) == EV_RELEASED) {
    if (selected != -1) {
      remName = sys.gui.getStr(fScrBtns[selected]);
      remOvrInit();
    }
  }

  if (sys.gui.getEventC(bRename) == EV_RELEASED) {
    if (selected != -1) {
      renameFile = sys.gui.getStr(fScrBtns[selected]);
      renameOp = textOvInit();
      renameName = renameFile;
      sys.gui.setStr(textLbl, "New name:");
    }
  }

  if (sys.gui.getEventC(bMkdir) == EV_RELEASED) {
    mkdirOp = textOvInit();
    mkdirName = "";
    sys.gui.setStr(textLbl, "New directory:");
  }

  if (sys.o.getId() == pasteOvr and sys.o.getId() != 0) {
    pasteOvUpd();
  }

  remOvrUpdate();

  if (sys.o.getId() == renameOp) {
    handleRename();
  }

  if (sys.o.getId() == mkdirOp) {
    handleMkdir();
  }

  if (sys.o.getId() == ppmOvr) {
    if (sys.gui.getEventC(ppmOk) == EV_RELEASED) {
      sys.o.destroy();
    }
  }
}

function buttonScroll {
  # Up
  if(sys.hw.btn.getEvent(BTN_UP) == EV_PRESSED) {
    if (sys.gui.getValue(arg0) > arg1) {
      sys.gui.setValue(arg0, sys.gui.getValue(arg0) - arg1);
    } else {
      sys.gui.setValue(arg0, 0);
    }
  }
  sys.hw.btn.clrEvent(BTN_UP);

  # Down
  if(sys.hw.btn.getEvent(BTN_DOWN) == EV_PRESSED) {
    if (sys.gui.getValue(arg0) < sys.gui.getParam(arg0) - arg1) {
      sys.gui.setValue(arg0, sys.gui.getValue(arg0) + arg1);
    } else {
      sys.gui.setValue(arg0, sys.gui.getParam(arg0));
    }
  }
  sys.hw.btn.clrEvent(BTN_DOWN);
}

function handleRename {
  renameName = sys.os.gui.handleText(textTxt, renameName);
  if (sys.gui.getEventC(textOk) == EV_RELEASED) {
    if (not sys.fs.exists(renameName)) {
      sys.fs.rename(renameFile, renameName);
      sys.o.destroy();
      sys.os.hideKbd();
      rldFiles();
      return;
    }
  }

  if (sys.gui.getEventC(textCancel) == EV_RELEASED) {
    sys.o.destroy();
    sys.os.hideKbd();
    return;
  }
}

function handleMkdir {
  mkdirName = sys.os.gui.handleText(textTxt, mkdirName);
  if (sys.gui.getEventC(textOk) == EV_RELEASED) {
    sys.fs.mkDir(mkdirName);
    sys.o.destroy();
    sys.os.hideKbd();
    rldFiles();
    return;
  }

  if (sys.gui.getEventC(textCancel) == EV_RELEASED) {
    sys.o.destroy();
    sys.os.hideKbd();
    return;
  }
}

function pasteOvInit {
  pasteScr = sys.gui.addScreen();
  pasteTx2 = sys.gui.addText(1, 0, 8, 1, "New file name:", pasteScr);
  pasteTxt = sys.gui.addText(1, 1, 6, 1, "", pasteScr);
  pasteOk = sys.gui.addButton(1, 2, 2, 1, "Ok", pasteScr);
  pasteCancel = sys.gui.addButton(4, 2, 3, 1, "Cancel", pasteScr);
  pasteBar = sys.gui.addBar(1, 1, 6, 1, 100, 0, pasteScr);
  pasteName = copyFname;
  pasteReplace = 1;
  copyRun = 0;
  sys.gui.setTexEd(pasteTxt, 1);
  pasteOvr = sys.o.setScr(pasteScr);
  sys.o.setXYXY(32, 64, 278, 190);
  sys.gui.setVisible(pasteBar, 0);
}

function pasteOvUpd {
  pasteName = sys.os.gui.handleText(pasteTxt, pasteName);

  if (sys.gui.getEventC(pasteOk) == EV_RELEASED) {
    if (sys.fs.exists(pasteName) and pasteReplace) {
      sys.gui.setStr(pasteTx2, "File exists! replace?");
      pasteReplace = 0;
    } else {
    sys.gui.setStr(pasteTx2, "Copy: " + pasteName);
    sys.gui.setVisible(pasteTxt, 0);
    sys.gui.setVisible(pasteOk, 0);
    sys.os.hideKbd();
    sys.gui.setVisible(pasteBar, 1);
    sys.fs.copyStart(pasteName, 2048);
    sys.gui.setParam(pasteBar, sys.fs.copyStat(1));
    print("copy: "+sys.fs.copyStat(1)+"bytes");
    copyRun = 1;
    sys.os.setRedraw();
    sys.gui.setStr(bCopy, "Copy");
    copyFname = "";
    }
  }

  if (sys.gui.getEventC(pasteCancel) == EV_RELEASED) {
    cancelCopy();
    sys.o.destroy();
    return;
  }

  if (copyRun == 1) {
    sys.gui.setValue(pasteBar, sys.fs.copyStat(2));

    if (sys.fs.copyStat(0) == 0) {
      print("copy: "+sys.fs.copyStat(2)+"bytes done");
      rldFiles();
      sys.o.destroy();
      copyRun = 0;
      return;
    }
  }
}

function cancelCopy {
  sys.gui.setStr(bCopy, "Copy");
  sys.fs.copyStop();
  copyFname = "";
}

function remOvrInit {
  rmScr = sys.gui.addScreen();
  sys.gui.addText(1, 1, 6, 1, "Remove "+ remName +" ?", rmScr);
  rmOk = sys.gui.addButton(1, 2, 2, 1, "Ok", rmScr);
  rmCancel = sys.gui.addButton(4, 2, 3, 1, "Cancel", rmScr);
  remOvr = sys.o.setScr(rmScr);
  sys.o.setXYXY(32, 64, 278, 190);
}

function remOvrUpdate {
  if (sys.o.getId() != remOvr or sys.o.getId() == 0) {
    return;
  }

  if (sys.gui.getEventC(rmOk) == EV_RELEASED) {
    #print("deleting:" + remName);
    sys.fs.delete(remName);
    sys.o.destroy();
    rldFiles();
    return;
  }

  if (sys.gui.getEventC(rmCancel) == EV_RELEASED) {
    sys.o.destroy();
    return;
  }
}

function textOvInit {
  textScr = sys.gui.addScreen();
  textLbl = sys.gui.addText(1, 0, 8, 1, "Label", textScr);
  textTxt = sys.gui.addText(1, 1, 6, 1, "", textScr);
  textOk = sys.gui.addButton(1, 2, 2, 1, "Ok", textScr);
  textCancel = sys.gui.addButton(4, 2, 3, 1, "Cancel", textScr);

  pasteReplace = 1;
  copyRun = 0;
  sys.gui.setTexEd(textTxt, 1);
  textOvr = sys.o.setScr(textScr);
  sys.o.setXYXY(32, 64, 278, 190);
  return textOvr;
}

function showPpm {
  ppmScr = sys.gui.addScreen();
  ppmLbl = sys.gui.addText(1, 0, 8, 1, arg0, ppmScr);
  sys.gui.addImage(1, 1, 8, 9, arg0, ppmScr);
  ppmOk = sys.gui.addButton(1, 10, 2, 1, "Ok", ppmScr);
  ppmOvr = sys.o.setScr(ppmScr);
}

