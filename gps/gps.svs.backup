function init {
	scr = sys pAddScreen();
	btn2 = sys pAddButton(7,0,12,1, "Update", scr);
	txt = sys pAddText(0, 9, 10, 13, "Waiting for fix.", scr);
	txtd = sys pAddText(1, 13, 10, 14, "", scr);
	bar = sys pAddBar(0, 0, 7, 1, 25, 0, scr);

	sys pSetMainScr(scr);

	update = 1;
	redrawMap = 3;
	fix = "";

 # sys profiler(1);
}

function getDeg {
	local i;
	local s;
	s = arg0;

	for (i = 0; i < len (s) and getcp(s, i) != "."; i++;){}

	return substr(s, 1, i - 3);
}

function getMin {
	local i;
	local s;
	s = arg0;

	for (i = 0; i < len (s) and getcp(s, i) != "."; i++;){}

	return substr(s, i - 2, i + 5);
}

function redrawMap {
	sys sxSetArea(0, 64, 318, 318);

	if ((arg1 == 1) or xPos_o != xPos or yPos_o != yPos) {
		sys pDrawPPM(0, 64, 1, "gps/worldMap.ppm");
	}

	if (arg0) {
		xPos = (float(getDeg(lon)) + float(getMin(lon))/60.0)*(160.0/180.0);
		if (lonS == "W"){
			xPos = xPos * (-1.0);
		}

		yPos = (float(getDeg(lat)) + float(getMin(lat))/60.0)*(115.0/180.0);
		if (latS == "N"){
			yPos = yPos * (-1.0);
		}

		sys sxFillRect(160 + num(xPos) - 5, 120 + num(yPos) - 1, 160 + num(xPos) + 5, 120 + num(yPos) + 1, sys sxMixColor(255,0,0));

		sys sxFillRect(160 + num(xPos) - 1, 120 + num(yPos)- 5, 160 + num(xPos) + 1, 120 + num(yPos) + 5, sys sxMixColor(255,0,0));

		xPos_o = xPos;

		yPos_o = yPos;
	}
}

function update {

	if(sys getRadraw()) {
		redrawMap((fix != "0") and (fix !=""), 1);
	}

	if (sys pGetEventC(btn2) == EV_RELEASED) {
		update = 1;
		failLock = 0;
		i = 0;
	}
	if (redrawMap > 1){
		redrawMap--;

		if (redrawMap == 1){
			redrawMap(0, 1);
		}
	}

	if (sys getLcdState() == 1) {
		if ((update == 1 and redrawMap == 1) or ((sys getUptime() > updTime + 25) and failLock == 0)) {
			updTime = sys getUptime();
			x = sys serialRcv(3200);
			if (x != "") {
				gps = x;
				x = 0; # throw away the long string
				sys GC(0);
				if (parseNMEA() == 1) {
					sys GC(0);
					timeStamp = "";
					if (sys getTimeHr() < 10) {
						timeStamp = timeStamp + "0";
					}
					timeStamp = timeStamp + sys getTimeHr() + ":";
					if (sys getTimeMin() < 10) {
						timeStamp = timeStamp + "0";
					}
					timeStamp = timeStamp + sys getTimeMin() + ":";
					if (sys getTimeSec() < 10) {
						timeStamp = timeStamp + "0";
					}
					timeStamp = timeStamp + sys getTimeSec() + " "
												+	sys getTimeDay()
												+ ". " + sys getTimeMonth()
												+ ". "+ sys getTimeYear();

					sys pSetStr(txt,"fix: "+ fix +
													"\nhdop: " + hdop +
													"\nlat: "+ getDeg(lat) +"* " + getMin(lat) + "' " + latS +
													"\nlon: "+ getDeg(lon) +"* " + getMin(lon) +"' " + lonS +
													"\nLast fix: " + timeStamp + ""
											);
					timeStamp = "";
					redrawMap(1, 0);
					sys pSetStr(txtd,"");
				}else{
					sys pSetStr(txtd,"fix: not valid");
				}
				update = 0;
				i = 0;
			} else {
				sys pSetStr(txtd, "Serial Error  (Try " + i +")");
				i++;

				if (i == 10) {
					sys pSetStr(txtd, "GPS communication Failed.");
					failLock = 1;
					redrawMap = 0;
					update = 0;
				}
			}
		}
	}

	sys pSetValue(bar, updTime + 25 - sys getUptime());
}

function parseNMEA {
	local args;
	local i;

	lat = "";
	fix = "";
	hdop = "";

	# testval
	# gps = "$GPGGA,172814.0,3723.46587704,N,12202.26957864,W,2,6,1.2,18.893,M,-25.669,M,2.0,0031*";

	for(i = 0; i < len (gps); i++;){
		if (getcp(gps, i) == "G") {
			if (getcp(gps, i + 1) == "G") {
				if (getcp(gps, i + 2) == "A") {
					gps = substr(gps, i + 3, 999);
					break
				}
			}
		}
	}

	agrs = 0;
	for(i = 0; i < len (gps); i++;){
		if (getcp(gps, i) == ",") {
			args++;
		}

		if (args == 8 and hdop == "") {
			local b;
			for(b = i + 1; b < len(gps) and getcp(gps, b) != ","; b++;) {
			}
			hdop = substr(gps, i + 1, b - 1);
		}


		if (args == 6 and fix == "") {
			fix = getcp(gps, i + 1);
		}

		if (args == 2 and lat == "") {
			local b;
			local c;
			for(b = i + 1; b < len(gps) and getcp(gps, b) != ","; b++;) {
			}

			lat = substr(gps, i + 1, b - 1);
			latS = getcp(gps, b + 1);

			b = b + 3;

			for(c = b; c < len(gps) and getcp(gps, c) != ","; c++;) {
			}

			lon = substr(gps, b, c - 1);
			lonS = getcp(gps, c + 1);

			args = 5;
			i = c + 1;
		}

	}

	gps=""; #throw away the gps string reference

	if (fix == "0" or fix == ""){
		return 0;
	} else {
		return 1;
	}
}
