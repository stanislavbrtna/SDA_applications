function init {
	#calc3 v1.0
	scr = sys pAddScreen();

	sys pSetMainScr(scr);

	sys pSetXcell(scr, 16);
	sys pSetYcell(scr, 16);

	sys pSetRelInit(1);

	btn_plus = sys pAddButton(1, 4, 2, 2, "+", scr);
	btn_minus = sys pAddButton(5, 4, 2, 2, "-", scr);
	btn_krat = sys pAddButton(9, 4, 2, 2, "*", scr);
	btn_del = sys pAddButton(13, 4, 2, 2, "/", scr);
	btn_c = sys pAddButton(17, 4, 2, 2, "C", scr);

	btn_pow = sys pAddButton(1, 7, 2, 2, "^", scr);
	btn_pi = sys pAddButton(5, 7, 2, 2, "pi", scr);
	btn_exp = sys pAddButton(8, 7, 3, 2, "exp", scr);
	btn_log = sys pAddButton(12, 7, 3, 2, "log", scr);

	btn_sqrt = sys pAddButton(16, 7, 3, 2, "sqrt", scr);

	btn_deg = sys pAddButton(1, 10, 4, 2, "DEG", scr);
	btn_sin = sys pAddButton(1, 12, 4, 2, "sin", scr);
	btn_cos = sys pAddButton(1, 14, 4, 2, "cos", scr);
	btn_tan = sys pAddButton(1, 16, 4, 2, "tan", scr);
	btn_atan = sys pAddButton(1, 18, 4, 2, "atan", scr);

	sys pSetDFont(scr, 32); # keypad has larger font

	disp = sys pAddText(4, 1, 20, 2, "0", scr);

	btn1 = sys pAddButton(7, 10, 4, 4, "1", scr);
	btn2 = sys pAddButton(11, 10, 4, 4, "2", scr);
	btn3 = sys pAddButton(15, 10, 4, 4, "3", scr);

	btn4 = sys pAddButton(7, 14, 4, 4, "4", scr);
	btn5 = sys pAddButton(11, 14, 4, 4, "5", scr);
	btn6 = sys pAddButton(15, 14, 4, 4, "6", scr);

	btn7 = sys pAddButton(7, 18, 4, 4, "7", scr);
	btn8 = sys pAddButton(11, 18, 4, 4, "8", scr);
	btn9 = sys pAddButton(15, 18, 4, 4, "9", scr);

	btn0 = sys pAddButton(7, 22, 4, 4, "0", scr);
	btn_des = sys pAddButton(11, 22, 4, 4, ",", scr);
	btn_sign = sys pAddButton(15, 22, 4, 4, "+/-", scr);

	btn_solve = sys pAddButton(1, 22, 4, 4, "=", scr);

	DEG = 1;

	reset(arg0);
}

function updKeypad {
  local retval;

  retval = -1.0;

  if (sys pGetEvent(btn0) == EV_RELEASED) {
	  retval = 0.0;
	}
	sys pSetEvent(btn0, 0);

	if (sys pGetEvent(btn1) == EV_RELEASED) {
	  retval = 1.0;
	}
	sys pSetEvent(btn1, 0);

	if (sys pGetEvent(btn2) == EV_RELEASED) {
	  retval = 2.0;
	}
	sys pSetEvent(btn2, 0);

	if (sys pGetEvent(btn3) == EV_RELEASED) {
	  retval = 3.0;
	}
	sys pSetEvent(btn3, 0);

	if (sys pGetEvent(btn4) == EV_RELEASED) {
	  retval = 4.0;
	}
	sys pSetEvent(btn4, 0);

	if (sys pGetEvent(btn5) == EV_RELEASED) {
	  retval = 5.0;
	}
	sys pSetEvent(btn5, 0);

	if (sys pGetEvent(btn6) == EV_RELEASED) {
	  retval = 6.0;
	}
	sys pSetEvent(btn6, 0);

	if (sys pGetEvent(btn7) == EV_RELEASED) {
	  retval = 7.0;
	}
	sys pSetEvent(btn7, 0);

	if (sys pGetEvent(btn8) == EV_RELEASED) {
	  retval = 8.0;
	}
	sys pSetEvent(btn8, 0);

	if (sys pGetEvent(btn9) == EV_RELEASED) {
	  retval = 9.0;
	}
	sys pSetEvent(btn9, 0);

	return retval;
}

function reset {
  op = 0;
  #op 0=+ 1=- 2=* 3=/ 4=^

  val_a = 0.0;
  val_b = float(arg0);

  des = 0;

  desnum = 1;

  sys pSetStr(disp, "" + val_b);
}

function solve {
  if (op == 0) {
    val_a = val_a + val_b;
  }
  if (op == 1) {
    val_a = val_a - val_b;
  }
  if (op == 2) {
    val_a = val_a * val_b;
  }
  if (op == 3) {
    if (val_b != 0.0) {
      val_a = val_a / val_b;
    } else {
      reset(0);
      sys pSetStr(disp,"Error");
      return;
    }
  }

  if (op == 4) {
		val_a = pow(val_a, val_b);
  }

  sys pSetStr(disp, "" + val_a);

  val_b = 0.0;
  des = 0;
  desnum = 1;
}

function exit {
	sys subRetval(val_a, 0, 0);
}


function update {

	key = updKeypad();

	if(key != -1.0) {
	  if(des == 0) {
	    val_b = val_b * 10.0 + key;
	    sys pSetStr(disp, "" + val_b);
	  } else {
	    desprac = 1.0;
	    for(i = 0; i < desnum; i = i + 1;) {
	      desprac = desprac / 10.0;
	      sys print("desp:" + desprac);
	    }
	    val_b = val_b + key * desprac;
	    if (key == 0.0) {
	      if (desnum == 1) {
	        sys pSetStr(disp, sys pGetStr(disp) + ".0");
	      } else {
	        sys pSetStr(disp,sys pGetStr(disp) + "0");
	      }
	    } else {
	      sys pSetStr(disp, "" + val_b);
	    }
	    desnum = desnum + 1;
	  }
	}

	if (sys pGetEventC(btn_c) == EV_RELEASED) {
	  reset(0);
	}

	if (sys pGetEventC(btn_solve) == EV_RELEASED) {
	  solve();
	  op = 0;
	}

	if (sys pGetEventC(btn_des) == EV_RELEASED) {
	  des = 1;
	}

	if (sys pGetEventC(btn_sign) == EV_RELEASED) {
	  val_b = -1.0 * val_b;
	  sys pSetStr(disp, "" + val_b);
	}

	if (sys pGetEventC(btn_plus) == EV_RELEASED) {
	  solve();
	  op = 0;
	}

	if (sys pGetEventC(btn_minus) == EV_RELEASED) {
	  solve();
	  op = 1;
	}

	if (sys pGetEventC(btn_krat) == EV_RELEASED) {
	  solve();
	  op = 2;
	}

	if (sys pGetEventC(btn_del) == EV_RELEASED) {
	  solve();
	  op = 3;
	}

	if (sys pGetEventC(btn_pow) == EV_RELEASED) {
	  solve();
	  op = 4;
	}

	if (sys pGetEventC(btn_sqrt) == EV_RELEASED) {
		if(val_b >= 0.0) {
	  	val_b = sqrt(val_b);
	  	sys pSetStr(disp, "" + val_b);
	  } else {
	  	sys pSetStr(disp, "Error: Too complex!");
	  }
	}

	if (sys pGetEventC(btn_exp) == EV_RELEASED) {
		val_b = exp(val_b);
		sys pSetStr(disp, "" + val_b);
	}

	if (sys pGetEventC(btn_log) == EV_RELEASED) {
		if(val_b > 0.0) {
	  	val_b = sqrt(val_b);
	  	sys pSetStr(disp, "" + val_b);
	  } else {
	  	sys pSetStr(disp, "Error!");
	  }
	}

	if (sys pGetEventC(btn_pi) == EV_RELEASED) {
		val_b = pi();
	  sys pSetStr(disp, "" + val_b);
	}

	if (sys pGetEventC(btn_deg) == EV_RELEASED) {
		DEG = 1 - DEG;
		if (DEG){
			sys pSetStr(btn_deg, "DEG");
		} else {
			sys pSetStr(btn_deg, "RAD");
		}
	}

	if (sys pGetEventC(btn_sin) == EV_RELEASED) {
	  val_b = sin(to_rad(val_b));
	  sys pSetStr(disp, "" + val_b);
	}

	if (sys pGetEventC(btn_cos) == EV_RELEASED) {
	  val_b = cos(to_rad(val_b));
	  sys pSetStr(disp, "" + val_b);
	}

	if (sys pGetEventC(btn_tan) == EV_RELEASED) {
	  val_b = tan(to_rad(val_b));
	  sys pSetStr(disp, "" + val_b);
	}

	if (sys pGetEventC(btn_atan) == EV_RELEASED) {
	  val_b = to_deg(atan(val_b));
	  sys pSetStr(disp, "" + val_b);
	}

}

function to_deg {
	if (DEG) {
		return ((arg0/pi()) * 180.0);
	} else {
		return arg0;
	}
}

function to_rad {
	if (DEG) {
		return ((arg0/180.0) * pi());
	} else {
		return arg0;
	}
}
