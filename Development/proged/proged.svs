 # this is still more-less proof of concept

import "lib/inc/1/external-kbd.svs"

function init {
  scr = sys.gui.addScreen();

  sys.os.gui.setMainScr(scr);

  sys.gui.setRelInit(1);

  scrollscr = sys.gui.addScreen();

  sys.gui.setXYXY(scrollscr, 0, 0, 9, 12);

  sys.gui.setScreen(scrollscr, scr);

  txt = sys.gui.addText(1, 0, 20, 400, "", scrollscr);
  
  liner = sys.gui.addText(0, 0, 1, 40, "", scrollscr);

  sld = sys.gui.addSliderV(9, 1, 1, 7, 7000, 1, scr);
  sld2 = sys.gui.addSliderH(3, 12, 6, 1, 320, 1, scr);
  
  btn_up = sys.gui.addButton(9, 0, 1, 1, "/\\", scr);
  btn_dn = sys.gui.addButton(9, 8, 1, 1, "\\/", scr);
  
  btn_menu = sys.gui.addButton(0, 12, 2, 1, "Menu", scr);

  sys.gui.setTexEd(txt, 1);
  sys.gui.setTxtSize(txt, 12);
  sys.gui.setTxtSize(liner, 12);

  kbdDriver = 0;
  cPosOld = 0;

  program = "";
  filename = "";
  fileRoot = 0; # root in /DATA
  
  kbd_init();
  
  print("DBG: arg0: "+arg0+" arg1: "+arg1+" arg2: "+arg2);

  if (typeof(arg0) == TYPE_STR) {
    if (arg0 != "") {
      filename = arg0;
      fileRoot = arg1;
    } else {
      filename = "";
    }
  } else {
    filename = "";
  }
  
  if (filename != "") {
    sys.fs.chDir(fileRoot);
    if (sys.fs.exists(filename)) {
      program = sys.fs.readStr(filename);
    }
  }

  fnameT = sys.gui.addText(0, 13, 10, 1,"Editing: " + filename, scr);
  
  textOvr = 0;
  
  menuOvr = 0;
  
  sld_old = -1;
  cfg_load();
}

function cfg_load {
  sys.fs.chDir(0);
  sys.fs.conf.open("settings/proged.cfg");
  kbdDriver = sys.fs.conf.readInt("kbdDriver", 0);
  sys.gui.setVisible(liner, sys.fs.conf.readInt("liner", 0));
  sys.gui.setX1(txt, sys.fs.conf.readInt("liner", 0));
  sys.fs.close();
  sys.fs.chDir(fileRoot);
}

function cfg_store {
  sys.fs.chDir(0);
  sys.fs.conf.open("settings/proged.cfg");
  sys.fs.conf.write("kbdDriver", "" + kbdDriver);
  sys.fs.conf.write("liner", "" + sys.gui.getVisible(liner));
  sys.fs.close();
  sys.fs.chDir(fileRoot);
}

function update {
  program = sys.os.gui.handleText(txt, program);
  
  if (kbdDriver) {
    kbd_update(txt);
  }
  
  if (cPosOld != sys.gui.getParam(txt)) {
    gc(100000);
    cPosOld = sys.gui.getParam(txt);
  }

  newOvrUpdate();
  menuOvUpdate();
  
  if (sys.gui.getEventC(btn_menu) == EV_RELEASED) {
    menuOvInit();
  }
  
  if (sys.gui.getEventC(btn_up) == EV_RELEASED) {
    if (sys.gui.getValue(sld) > 16) {
      sys.gui.setValue(sld, sys.gui.getValue(sld) - 16);
    } else {
      sys.gui.setValue(sld, 0);
    }
  }
  
  if (sys.gui.getEventC(btn_dn) == EV_RELEASED) {
    if (sys.gui.getValue(sld) < 7000) {
      sys.gui.setValue(sld, sys.gui.getValue(sld) + 16);
    } else {
      sys.gui.setValue(sld, 7000);
    }
  }

  sys.gui.setYscroll(scrollscr, sys.gui.getValue(sld));
  sys.gui.setXscroll(scrollscr, sys.gui.getValue(sld2));
  
  upd_liner();
}

function upd_liner {

  if (sys.gui.getYscroll(scrollscr) == sld_old or sys.gui.getVisible(liner) == 0)
    return;

  sld_old = sys.gui.getYscroll(scrollscr);

  local s = "";
  local i;
  
  sys.gui.setY1(liner, sys.gui.getYscroll(scrollscr) / 32);
  sys.gui.setY2(liner, sys.gui.getYscroll(scrollscr) / 32 + 80);
  
  for (i = 1; i < 20; i++;) {
    s += sys.gui.getYscroll(scrollscr)/14 + i + "\n";
  }
  sys.gui.setStr(liner, s);
}


function callRet {
  filename = arg0;
  sys.fs.chDir(arg1);
  fileRoot = arg1;
  
  program = "";
  sys.gui.setStr(liner, "");
  sys.gui.setStr(txt, "");
  gc(10000);
  if (sys.fs.exists(filename)) {
    program = sys.fs.readStr(filename);
    sys.gui.setStr(fnameT, "Editing: " + filename);
    upd_liner();
  }
}


function menuOvInit {
  menuScr = sys.gui.addScreen();
  
  sys.gui.addText(0, 0, 6, 1,"   SDA Script edit", menuScr);
  
  btn_new =  sys.gui.addButton(1, 1, 4, 1, "New", menuScr);
  
  btn_open =  sys.gui.addButton(1, 2, 4, 1, "Open", menuScr);

  btn_run = sys.gui.addButton(1, 4, 4, 1, "Run", menuScr);

  btn_store = sys.gui.addButton(1, 5, 4, 1, "Save", menuScr);
  
  btn_close = sys.gui.addButton(6, 1, 1, 1, "X", menuScr);
  
  btn_lines = sys.gui.addCheckBox(1, 6, 10, 1, "Show lines", menuScr);
  
  sys.gui.setValue(btn_lines, sys.gui.getVisible(liner));
  
  btn_kbd = sys.gui.addCheckBox(1, 7, 10, 1, "Keyboard Driver", menuScr);
  
  sys.gui.setValue(btn_kbd, kbdDriver);
  
  menuOvr = sys.o.setScr(menuScr);
  
  if (fileRoot == 0) {
    sys.gui.setGrayout(btn_run, 1);
  }
  
  #sys.o.setXYXY(32, 64, 278, 190);

  return menuOvr;
}


function menuOvUpdate {
  if (sys.o.getId() != menuOvr or sys.o.getId() == 0) {
    return;
  }
  
  if (sys.gui.getEventC(btn_run) == EV_RELEASED) {
    sys.fs.chDir(fileRoot); # goto apps
    sys.fs.writeStr(program, filename);
    if (fileRoot == 1) {
      sys.os.subProcess(filename, "", 0, 0, 0);
    }
    sys.o.destroy();
    return;
  }

  if (sys.gui.getEventC(btn_store) == EV_RELEASED) {
    if (filename != "") {
      sys.fs.writeStr(program, filename);
    } else {
      new_store = 1;
      newOvInit();
      return;
    }
    sys.o.destroy();
    return;
  }

  if (sys.gui.getEventC(btn_open) == EV_RELEASED) {
    sys.os.subProcess("lib/fsl.svs", &callRet, 0, 0, 0);
    return;
  }
  
  if (sys.gui.getEventC(btn_new) == EV_RELEASED) {
    new_store = 0;
    newOvInit();
    return;
  }
  
  if (sys.gui.getEventC(btn_kbd) == EV_RELEASED) {
    kbdDriver = sys.gui.getValue(btn_kbd);
    cfg_store();
  }
  
  if (sys.gui.getEventC(btn_lines) == EV_RELEASED) {
    sys.gui.setX1(txt, sys.gui.getValue(btn_lines));
    sys.gui.setVisible(liner, sys.gui.getValue(btn_lines));
    cfg_store();
  }
  
  
  if (sys.gui.getEventC(btn_close) == EV_RELEASED) {
    sys.o.destroy();
    return;
  }
}

function newOvInit {
  textScr = sys.gui.addScreen();
  sys.gui.addText(1, 0, 8, 1, "New file:", textScr);
  textTxt = sys.gui.addText(1, 1, 6, 1, "", textScr);
  
  textExt1 = sys.gui.addButton(3, 2, 2, 1, ".txt", textScr);
  textExt2 = sys.gui.addButton(5, 2, 2, 1, ".svs", textScr);
  
  textOk = sys.gui.addButton(1, 3, 2, 1, "Ok", textScr);
  textCancel = sys.gui.addButton(4, 3, 3, 1, "Cancel", textScr);
  
  newFileName = "";
  sys.gui.setTexEd(textTxt, 1);
  textOvr = sys.o.setScr(textScr);
  sys.o.setXYXY(32, 64, 278, 222);
  sys.os.showKbd();
  sys.gui.setTexAct(textTxt);
  return textOvr;
}

function newOvrUpdate {
  if (sys.o.getId() != textOvr or sys.o.getId() == 0) {
    return;
  }
  newFileName = sys.os.gui.handleText(textTxt, newFileName);

  if ((sys.gui.getEventC(textOk) == EV_RELEASED) and (newFileName != "") ) {
    if (new_store) {
      filename = newFileName;
      fileRoot = 0;
      if (filename != "") {
        sys.fs.writeStr(program, filename);
        sys.gui.setStr(fnameT, "Editing: " + filename);
        sys.os.hideKbd();
        sys.o.destroy();
      }
    } else {
      filename = newFileName;
      fileRoot = 0;
      program = "";
      sys.gui.setStr(fnameT, "Editing: " + filename);
      sys.os.hideKbd();
      sys.o.destroy();
    }
    return;
  }
  
  if (sys.gui.getEventC(textExt1) == EV_RELEASED) {
    newFileName += ".txt";
  }
  
  if (sys.gui.getEventC(textExt2) == EV_RELEASED) {
    newFileName += ".svs";
  }

  if (sys.gui.getEventC(textCancel) == EV_RELEASED) {
    sys.os.hideKbd();
    sys.o.destroy();
    return;
  }
}


