function init {
  print("testoid v.2.1");
  sys.os.checkVer(700);
  if(arg0) {
    print("argument0: " + arg0);
  }
  if(arg1) {
    print("argument1: " + arg1);
  }
  if(arg2) {
    print("argument2: " + arg2);
  }
  scr = sys.gui.addScreen();
  sys.os.gui.setMainScr(scr);
  sys.gui.setSpacing(scr, 2, 5, 2, 2);

  sys.gui.addText(0, 0, 8, 1, "Příliš žluťoučký kůň", scr);
  btn1 = sys.gui.addButton(1, 1, 5, 2, "Count!", scr);
  btn_text = sys.gui.addText(1,2, 6, 3, "Nothing pressed", scr);
  ebtn1 = sys.gui.addButton(1, 3, 5, 4, "Float Error", scr);
  ebtn2 = sys.gui.addButton(1, 4, 5, 5, "Sys Error", scr);

  obtn1 = sys.gui.addButton(1, 6, 5, 7, "Get Time!", scr);

  date_btn = sys.gui.addButton(1, 7, 5, 8, "Get Date!", scr);

  btn = sys.gui.addButton(1, 8, 5, 9, "EVTEST", scr);
  btn_info = sys.gui.addButton(1, 9, 5, 10, "sysinfo", scr);

  btn_impd = sys.gui.addButton(1, 10, 5, 11, "InputDemo", scr);

  btn_rnd = sys.gui.addButton(6, 1, 10, 2, "RND", scr);

  btn_cv = sys.gui.addButton(6, 2, 10, 3, "Cvik", scr);

  if (sys.os.getLang() == SVP_LANG_CZ) {
    sys.gui.addText(6, 3, 10, 4, "Lang: CZ", scr);
  }

  if (sys.os.getLang() == SVP_LANG_ENG) {
    sys.gui.addText(6, 3, 10, 4, "Lang: ENG", scr);
  }

  btn_bp = sys.gui.addButton(6, 4, 10, 5, "beep", scr);

  sldT = sys.gui.addSliderV(6, 5, 7, 11, 1200, 250, scr);

  sldF = sys.gui.addSliderV(8, 5, 9, 11, 16000, 27, scr);

  if (sys.snd.getMute()) {
    sys.gui.setGrayout(sldT, 1);
    sys.gui.setGrayout(sldF, 1);
  }

  btn_ledstat = sys.gui.addButton(1, 11, 5, 12, "Status Led", scr);
  btn_gosub = sys.gui.addButton(1, 12, 5, 13, "subProcess", scr);
  btn_gosub2 = sys.gui.addButton(6, 12, 9, 13, "about", scr);
  btn_runner = sys.gui.addButton(6, 11, 9, 12, "Runner", scr);

  #cvik

  scr2 = sys.gui.addScreen();
  sys.os.gui.setMainScr(scr);

  btn_cvik = sys.gui.addButton(3, 0, 7, 1, "Start/Stop", scr2);
  cinfo = sys.gui.addButton(3, 13, 7, 14, "info", scr2);

  bar1 = sys.gui.addBar(0, 2, 10, 4, 10, 0, scr2);

  bar2 = sys.gui.addBar(0, 5, 10, 7, 10, 0, scr2);

  bar3 = sys.gui.addBar(0, 8, 10, 10, 10, 0, scr2);

  bar4 = sys.gui.addBar(0, 11, 10, 13, 10, 0, scr2);

  start = 0;
  sys.gui.setEvent(btn1, 0);

  init_inp();
  init_runner();

  sys.hw.btn.stdbyEn(1);
}

function init_runner {
  runscr = sys.gui.addScreen();

  rselect = sys.gui.addButton(1, 1, 9, 2, "Choose file", runscr);

  rbtn = sys.gui.addButton(1, 3, 5, 4, "RUN!", runscr);
  

  rloop = sys.gui.addCheckBox(1, 5, 5, 6, "loop it!", runscr);

  sys.gui.setTexEd(rtxt, 1);

  rfname = "";
}

function upd_runner {

  if(sys.gui.getEventC(rselect) == EV_RELEASED) {
    sys.os.subProcess("lib/fsl.svs", &runhandle, 0, 0, 0);
    return;
  }

  if(sys.gui.getEventC(rbtn) == EV_RELEASED) {
    sys.gui.setValue(rtxt, 0);
    sys.os.hideKbd();
    sys.os.subProcNC();
    if (sys.gui.getValue(rloop)) {
      sys.os.subProcess(rfname, "runloop", 0, 0, 0);
    } else {
      sys.os.subProcess(rfname, "", 0, 0, 0);
    }
    return;
  }
}

function runhandle {
  #if (arg1 == 1) {
    rfname = arg0;
    sys.gui.setStr(rselect, rfname);
  #}
}

function runloop {
  sys.os.subProcess(rfname, "runloop", 0, 0, 0);
}

function init_inp {
  #vytvoření nové obrazovky
  iscr = sys.gui.addScreen();
  sys.profiler(1);

  #testovací text
  text = "Textovy vstup";
  text2 = "Textovy vstup2";


  #nové textové pole
  txt = sys.gui.addText(1, 1, 9, 3, text, iscr);

  txt2 = sys.gui.addText(1, 4, 9, 5, text2, iscr);

  #tlačítko
  ibtn = sys.gui.addButton(2, 7, 8, 8, "Vymazat", iscr);

  #nastavení editovatelnosti nového textového pole
  sys.gui.setTexEd(txt,1);
  sys.gui.setTexEd(txt2,1);

  textold = "";
}

function update_inp {

  #obsluha propojení promněnné a textového pole
  text=sys.os.gui.handleText(txt, text);
  text2=sys.os.gui.handleText(txt2, text2);

  if (text != textold){
    print(text);
  }

  textold = text;

  #obsluha tlačítka "Vymazat"
  if (sys.gui.getEvent(ibtn)==3){
    if (sys.gui.getTexAct(txt)) {
      text = "";
    }
    if (sys.gui.getTexAct(txt2)) {
      text2 = "";
    }
  }
  sys.gui.setEvent(ibtn,0);
}

function update {
  #counter

  if (sys.gui.getEvent(btn1)==EV_RELEASED){
    sys.cnt.set(10005 ) ;
    sys.gui.setStr(btn1, "10");
    cnt = 10;
    rst = 1;
  }
  sys.gui.setEvent(btn1,0);

  if((sys.cnt.get()/1000) < cnt){
    cnt = cnt-1;
    sys.gui.setStr(btn1, "" + cnt);
  }

  if ((sys.cnt.get() == 0)*(rst == 1)) {
    sys.gui.setStr(btn1, "Count!");
    rst = 0;
  }

  #errortest
  if (sys.gui.getEvent(ebtn1)==3){
    print("FloatError");
    a=1+1.0;
  }
  sys.gui.setEvent(ebtn1,0);

  if (sys.gui.getEvent(ebtn2)==3){
    print("sysError");
    sys.karel();
  }
  sys.gui.setEvent(ebtn2,0);

  #overlay

  if (sys.gui.getEvent(obtn1)==3){
    tim_ov=sys.o.time.add();
  }
  sys.gui.setEvent(obtn1,0);

  sys.o.time.update(tim_ov);

  if(sys.o.time.getOk(tim_ov)){
    sys.gui.setStr(obtn1, ""+sys.o.time.getHr(tim_ov)+":"+sys.o.time.getMin(tim_ov));
    sys.o.time.clrOk(tim_ov);
  }

  if (sys.gui.getEvent(date_btn)==3){
    date_ov=sys.o.date.add(2017, 1, 28);
  }
  sys.gui.setEvent(date_btn, 0);

  sys.o.date.update(date_ov);

  if (sys.o.date.getOk(date_ov)){
    sys.gui.setStr(date_btn, ""+sys.o.date.getDay(date_ov)+". "+sys.o.date.getMon(date_ov)+". "+sys.o.date.getYr(date_ov));
    sys.o.date.clrOk(date_ov);
  }

  #evtest
  if (sys.gui.getEvent(btn)){
    sys.gui.setStr(btn, "EV:"+sys.gui.getEvent(btn));
  }
  sys.gui.setEvent(btn,0);

  if (sys.gui.getEvent(btn_info)==3){
    sys.info();
  }
  sys.gui.setEvent(btn_info,0);

  if (sys.gui.getEvent(btn_rnd)==3){
    sys.gui.setStr(btn_rnd, ""+sys.os.rnd());
  }
  sys.gui.setEvent(btn_rnd,0);

  if (sys.gui.getEvent(btn_cv)==3){
    sys.os.gui.setMainScr(scr2);
    cvik=1;
  }
  sys.gui.setEvent(btn_cv,0);

  if (sys.gui.getEvent(btn_bp)==3){
    sys.snd.beep();
  }
  sys.gui.setEvent(btn_bp,0);

  if (sys.gui.getEvent(sldT)){
    sys.snd.beepTime(sys.gui.getValue(sldT));
  }
  sys.gui.setEvent(sldT,0);

  if (sys.gui.getEvent(sldF)){
    sys.snd.beepFreq(sys.gui.getValue(sldF));
  }
  sys.gui.setEvent(sldF,0);



  if(cvik==1){
    update_cvik();
  }

  if (sys.gui.getEvent(btn_impd)){
    impDemo = 1;
    sys.os.gui.setMainScr(iscr);
  }
  sys.gui.setEvent(btn_impd,0);

  if (impDemo == 1) {
    update_inp();
  }

  if (sys.hw.btn.getEvent(0) == 1){
    sys.gui.setStr(btn_text, "A Pressed (0)");
  }
  sys.hw.btn.clrEvent(0);

  if (sys.hw.btn.getEvent(1) == 1){
    sys.gui.setStr(btn_text, "Left Pressed (1)");
  }
  sys.hw.btn.clrEvent(1);

  if (sys.hw.btn.getEvent(2) == 1){
    sys.gui.setStr(btn_text, "Up Pressed (2)");
  }
  sys.hw.btn.clrEvent(2);


  if (sys.hw.btn.getEvent(3) == 1){
    sys.gui.setStr(btn_text, "Down Pressed (3)");
  }
  sys.hw.btn.clrEvent(3);

  if (sys.hw.btn.getEvent(4) == 1){
    sys.gui.setStr(btn_text, "Right Pressed (4)");
  }
  sys.hw.btn.clrEvent(4);

  if (sys.hw.btn.getEvent(5) == 1){
    sys.gui.setStr(btn_text, "B Pressed (5)");
  }
  sys.hw.btn.clrEvent(5);

  if (sys.gui.getEvent(btn_ledstat) == EV_RELEASED) {
    ledstat = ledstat + 1;
    sys.hw.setLed(ledstat);

    if (ledstat >= 4) {
      ledstat = -1;
    }
  }
  sys.gui.setEvent(btn_ledstat, EV_NONE);

  if(sys.gui.getEventC(btn_gosub) == EV_RELEASED) {
    sys.os.subProcess("calc/Calc.svs", &callRet, 123, 0, 0);
    return;
  }

  if(sys.gui.getEventC(btn_gosub2) == EV_RELEASED) {
    sys.os.subProcess("notepad/notepad.svs", "", "test.txt", 0, 0);
    return;
  }

  if(sys.gui.getEventC(btn_runner) == EV_RELEASED) {
    sys.os.gui.setMainScr(runscr);
    runnerRunning = 1;
  }

  if(runnerRunning) {
    upd_runner();
  }

}

function callRet{
  print("callback returned");
  print("argument0: " + arg0);
  sys.gui.setStr(btn_gosub, "-> " + arg0);
}

function update_cvik {

  if ((val < 10) * start) {
    val = val + 1;
    sys.gui.setValue(bar1, 10 - val);
    sys.gui.setValue(bar2, 10 - val);
    sys.gui.setValue(bar3, 10 - val);
    sys.gui.setValue(bar4, 10 - val);

    a = 0;
    k = "k";
    while(a < 10) {
      k = k + "k";
      a = a + 1;
    }
  }else{
    val = 0;
  }

  if (sys.gui.getEvent(btn_cvik)==3){
    start = 1 - start;

    sys.hw.lockSleep(start);
  }
  
  if(sys.gui.getEventC(cinfo) == EV_RELEASED) {
    dbg(-4);
  }
  

  sys.gui.setEvent(btn_cvik,0);
}

function exit{
    sys.gui.destroy(scr);
    sys.gui.destroy(scr2);
    sys.gui.destroy(iscr);

    sys.os.subRetval("aaaa", 3, "asd");
}
