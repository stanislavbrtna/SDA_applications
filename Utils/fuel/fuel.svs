function init {
  scr = sys.gui.addScreen();
  sys.gui.setRelInit(1);
  sys.os.gui.setMainScr(scr);
  
  sys.gui.addText(0, 0, 8, 1, "Vehicles", scr);
  
  bNew = sys.gui.addButton(0, 12, 5, 1, "New vehicle", scr);
  
  bRemove = sys.gui.addButton(6, 12, 3, 1, "Remove", scr);
  
  sProjects = sys.gui.addScreen(0, 1, 8, 10, scr);
  
  pSld = sys.gui.addSliderV(8, 1, 1, 8, 100, 50, scr);
  
  set_spacing(scr);

  ov_id = 0;
  
  array pButtons[32];
  array pFiles[32];
  
  sys.fs.chDir("appdata");
  
  if (not(sys.fs.exists("fuel") and sys.fs.isDir("fuel"))) {
    sys.fs.mkDir("fuel");
  }
  sys.fs.chDir("fuel");
    
  load_projects();
  
  new_ov_id = 0;
  rem_ov_id = 0;
  
  sProj = 0;
  sNotes = 0;
  
  keypBack = 0;
  
  dateOvr = 0;
  
  dbg(-1);
}

function set_spacing {
  sys.gui.setSpacing(arg0, 1, 1, 1, 1);
  sys.gui.setXcell(arg0, 34);
  sys.gui.setYcell(arg0, 34);
  sys.gui.setXscroll(arg0, -6);
  sys.gui.setXscroll(arg0, -6); # to change xscroll and xscroll old, prevents scroll artefacts
}

function load_projects {
  # dummy, replace with correct
  sys.gui.destroy(sProjects);
  sProjects = sys.gui.addScreen(0, 1, 8, 10, scr);
  local i = 0; 
  
  for(findfil = sys.fs.find("fls", "."); findfil != ""; findfil = sys.fs.findNext();) {
    print("found: " + findfil);
    sys.fs.conf.open(findfil);
    if (sys.fs.conf.exists("vehicle_name")) {
      pButtons[i] = sys.gui.addButton(0, i, 7, 1, sys.fs.conf.read("vehicle_name"), sProjects);
      pFiles[i] = findfil;
      i++;
    }
    sys.fs.conf.close();
  }
  
  set_spacing(sProjects);
  sys.gui.setYscroll(sProjects, -6);
  
  sys.gui.setGrayout(bRemove, 1);
  pSelect = -1;
  pCount = i;
  
  sys.gui.setValue(pSld, 0);
  sys.gui.setParam(pSld, (pCount - 1)*34 + 6);
}

function handle_proj {
  local i;
  for(i = 0; i < pCount; i++;) {
    if (sys.gui.getEventC(pButtons[i]) == EV_RELEASED) {
      if (sys.gui.getSelect(pButtons[i]) == 1) {
        load_project(pFiles[i]);
      } else {
        sys.gui.setSelect(pButtons[i], 1);
        if (pSelect != -1) {
          sys.gui.setSelect(pButtons[pSelect], 0);
          pSelect = i;
        } else {
          pSelect = i;
          sys.gui.setGrayout(bRemove, 0);
        }
      }
    } 
  }
}

function callRet {
  print("argument0: " + arg0);
  sys.gui.setStr(btn, "-> " + arg0 + "(" + arg1 + ")");
}


function new_overlay {
  new_screen = sys.gui.addScreen();
  sys.gui.addText(0, 1, 8, 1, "Set new vehicle name:", new_screen);
  new_text = sys.gui.addText(0, 2, 7, 1, "", new_screen);
  sys.gui.setTexEd(new_text, 1);
  sys.gui.addText(0, 3, 8, 1, "Odometer value:", new_screen);
  new_odo = sys.gui.addText(0, 4, 5, 1, "", new_screen);
  sys.gui.addText(5, 4, 2, 1, "Km", new_screen);
  sys.gui.setTexEd(new_odo, 1);
  
  new_str = "";
  new_odo_str = "";
  new_ok = sys.gui.addButton(5, 6, 2, 1, "Ok", new_screen);
  new_cancel = sys.gui.addButton(0, 6, 3, 1, "Cancel", new_screen);
  
  set_spacing(new_screen);
  sys.gui.setYscroll(new_screen, 16);
}


function new_handle {
  if (sys.gui.getEventC(new_ok) == EV_RELEASED) {
    sys.o.destroy();
    sys.os.hideKbd();
    
    sys.fs.conf.open(new_str+".fls");
    sys.fs.conf.write("vehicle_name", new_str);
    sys.fs.conf.write("odo", "1");
    sys.fs.conf.write("odo_base", new_odo_str);
    sys.fs.conf.close();
    
    load_projects();
    
    return;
  }
    
  if (sys.gui.getEventC(new_cancel) == EV_RELEASED) {
    sys.o.destroy();
    sys.os.hideKbd();
    return;
  }
  
  new_str = sys.os.gui.handleText(new_text, new_str);
  new_odo_str = sys.os.gui.handleText(new_odo, new_odo_str);
}


function rem_overlay {
  rem_screen = sys.gui.addScreen();
  sys.gui.addText(1, 1, 8, 1, "Remove vehicle?", rem_screen);
  sys.gui.addText(1, 2, 8, 1, sys.gui.getStr(pButtons[pSelect]), rem_screen);
  rem_ok = sys.gui.addButton(5, 3, 2, 1, "Ok", rem_screen);
  rem_cancel = sys.gui.addButton(1, 3, 3, 1, "Cancel", rem_screen);
  sys.gui.setYscroll(rem_screen, 16);
}


function rem_handle {
  if (sys.gui.getEventC(rem_ok) == EV_RELEASED) {
        
    if (not(sys.fs.exists("trash") and sys.fs.isDir("trash"))) {
      sys.fs.mkDir("trash");
    }
    
    sys.fs.rename(pFiles[pSelect], "trash/" + pFiles[pSelect]);
    
    load_projects();
    
    sys.o.destroy();
    return;
  }
    
  if (sys.gui.getEventC(rem_cancel) == EV_RELEASED) {
    sys.o.destroy();
    return;
  }
}
#*
*  wrk_start_n
*  wrk_stop_n
*  wrk_note_n
*#


function store_entry {
  sys.fs.conf.open(confCurrent);
  local i = 0;
  while(sys.fs.conf.exists("fc_l_"+i)) {
    i++;
  }
  
  current_index = i;
  
  sys.fs.conf.write("fc_l_"+current_index, "" + sL);
  sys.fs.conf.write("fc_price_"+current_index, "" + sPrice);
  
  if(sPriceO == "") {
    sPriceO = "" + (float(sL)*float(sPrice));
  }
  
  sys.fs.conf.write("fc_price_o_"+current_index, "" + sPriceO);
  sys.fs.conf.write("fc_km_"+current_index, "" + sKm);
  sys.fs.conf.write("fc_date_"+current_index, "" + date);
  
  sys.fs.conf.close();
}

function show_status {
  local avg = "n/a";
  local prc = "n/a";
    
  if (float(sKm) != 0.0) {
    avg = float(sL)/float(sKm) * 100.0;
    prc = float(sPriceO)/float(sKm);
  } 
  
  sys.gui.setStr(tStatus, crop(avg) + " l/100km, " + crop(prc) + " Kč/km");
}


function crop {
  arg0 = "" + arg0;
  if (instr(arg0, ".")) {
    return substr(arg0, 0, instr(arg0, ".") + 2);
  }
  
  return arg0;
}

function count_values {
  sys.fs.conf.open(confCurrent);
  local i = 0;
  local odoBase = float(sys.fs.conf.read("odo_base"));
  
  local array result[2];
  
  local l = 0.0;
  local km = 0.0;
  local kc = 0.0;
  
  fc_avg = 0;
  fc_km = 0;
  
  
  while(sys.fs.conf.exists("fc_l_"+i)) {
    l  += float(sys.fs.conf.read("fc_l_"+i));
    kc += float(sys.fs.conf.read("fc_price_o_"+i));
    if(odo) {
      km += float(sys.fs.conf.read("fc_km_"+i)) - odoBase;
      odoBase = float(sys.fs.conf.read("fc_km_"+i));
    } else {
      km += float(sys.fs.conf.read("fc_km_"+i));
    }
    i++;
  }
  
  if(km == 0.0 or l == 0.0) {
    sys.gui.setStr(tInfo,"n/a l/100km\nn/a kč/km");
    return 0;
  }
  
  fc_avg = (l/km) *100.0;
  fc_km = kc/km;
  
  sys.gui.setStr(tInfo, crop(fc_avg) + " l/100km\n" + crop(fc_km) + " kč/km");
  
  return 1;
}

function load_notes {
  if (sNotes != 0) {
    sys.gui.destroy(sNotes);
  }
  
  sNotes = sys.gui.addScreen();
  sys.os.gui.setMainScr(sNotes);
  
  sys.gui.addText(0, 0, 8, 1, "Fuel consumption log:", sNotes);
  
  sNinscr = sys.gui.addScreen(0, 1, 8, 10, sNotes);
  
  bNUp = sys.gui.addButton(8, 1, 1, 3, "/\\", sNotes);
  
  bNDn = sys.gui.addButton(8, 4, 1, 3, "\\/", sNotes);
  
  bNBack = sys.gui.addButton(0, 11, 3, 1, "Back", sNotes);
  
  tNNote = sys.gui.addText(0, 0, 8, 10, "", sNinscr);
  
  set_spacing(sNotes);
  
  current_note = 0;
  
  if (current_index > 1) {
    current_note = current_index;
  }
  
  keypBack = bNBack;
  
  sys.gui.setStr(tNNote, note_get_fmt(current_note));
}


function note_get_fmt {
  local note = "!NONE";
  sys.fs.conf.open(confCurrent);
    
  if (not sys.fs.conf.exists("fc_l_"+arg0)) {
    sys.fs.conf.close();
    return note;
  }
    
  local amnt   = sys.fs.conf.read("fc_l_"+arg0);
  local price  = sys.fs.conf.read("fc_price_"+arg0);
  local priceO = sys.fs.conf.read("fc_price_o_"+arg0);
  local km     = sys.fs.conf.read("fc_km_"+arg0); 
  
  local avg = 0.0;
  local prc = 0.0;
  
  if (float(km) != 0.0) {
    avg = float(amnt)/float(km) * 100.0;
    prc = float(priceO)/float(km);
  }
  
  local date = num(sys.fs.conf.read("fc_date_"+arg0));
  
  sys.fs.conf.close();
  
  return "Date: "+sys.time.getTsDay(date)
                 +". "+sys.time.getTsMonth(date)
                 +". "+sys.time.getTsYear(date)
                 +"\nAmmount: " + amnt 
                 +"\nPrice: " + price + " Kč/l"
                 +"\nTotal: " + priceO + " Kč"
                 +"\nTrip: "  + km + " Km"
                 +"\n\n" + crop(avg) + " l/100km\n" + crop(prc) + " Kč/km";
}


function upd_notes {
  if (sNotes == 0) {
    return;
  }
  
  if (sys.gui.getEventC(bNBack) == EV_RELEASED) {
    sys.os.gui.setMainScr(sProj);
    sys.gui.destroy(sNotes);
    sNotes = 0;
    keypBack = bBack;
    return;
  }
  
  if (sys.gui.getEventC(bNUp) == EV_RELEASED) {
    if (current_note >= 1) {
      current_note--;
      sys.gui.setStr(tNNote, note_get_fmt(current_note));
    }
  }
  
  if (sys.gui.getEventC(bNDn) == EV_RELEASED) {
    
    local note = note_get_fmt(current_note + 1);
    
    if (note != "!NONE") {
      sys.gui.setStr(tNNote, note);
      current_note++;
    }
  }
}


function load_project {
  if (sProj != 0) {
    sys.gui.destroy(sProj);
  }
  
  sL = "";
  sPrice = "";
  sPriceO = "";
  sKm = "";
  
  
  sProj = sys.gui.addScreen();
  sys.os.gui.setMainScr(sProj);
  
  confCurrent = arg0;
  
  sys.fs.conf.open(confCurrent);
  
  if(sys.fs.conf.read("odo") == "1") {
    odo = 1;
  } else {
    odo = 0;
  }
  
  sys.gui.addText(0, 0, 8, 2, sys.fs.conf.read("vehicle_name"), sProj);
  
  tInfo = sys.gui.addText(0, 1, 8, 2, "", sProj);
  count_values();
  
  tL = sys.gui.addText(0, 3, 5, 1, "", sProj);
  sys.gui.setTexEd(tL, 1);
  
  sys.gui.addText(5, 3, 1, 1, "l", sProj);
  
  tPrice = sys.gui.addText(0, 4, 5, 1, "", sProj);
  sys.gui.setTexEd(tPrice, 1);
  
  sys.gui.addText(5, 4, 2, 1, "Kč/l", sProj);
  
  tPriceO = sys.gui.addText(0, 5, 5, 1, "", sProj);
  sys.gui.setTexEd(tPriceO, 1);
  
  sys.gui.addText(5, 5, 1, 1, "Kč", sProj);
  
  tKm = sys.gui.addText(0, 6, 5, 1, "", sProj);
  sys.gui.setTexEd(tKm, 1);
  
  sys.gui.addText(5, 6, 2, 1, "Km", sProj);
  
  if (odo) {
    bOdo = sys.gui.addButton(7, 6, 2, 1, "Odo", sProj);
  } else {
    bOdo = sys.gui.addButton(7, 6, 2, 1, "Trip", sProj);  
  }
  
  bDate = sys.gui.addButton(0, 7, 5, 1, sys.time.getDay() + ". " + sys.time.getMonth() + ". " + sys.time.getYear(), sProj);
  date = sys.time.get();
  
  tStatus = sys.gui.addText(0, 8, 10, 1, "", sProj);
  
  bAdd = sys.gui.addButton(5, 7, 4, 1, "Add entry", sProj);
  
  bBack = sys.gui.addButton(0, 11, 3, 1, "Back", sProj);
  
  bNote = sys.gui.addButton(6, 11, 3, 1, "See log", sProj);
  
  set_spacing(sProj);
  
  currentIndex = 0;
  
  sys.fs.conf.close();
    
  keypBack = bBack;
}

function fz {
  #return arg0;
  local t = arg0;
  t = "" + t;
  if (len(t) == 1) {
    return "0"+t;
  } else {
    return t;
  }
}


function autosave {
  if (last_save_time+(10*60) < sys.time.get()) {
    
    last_save_time = sys.time.get();
    sys.fs.conf.open(confCurrent);
    sys.fs.conf.write("wrk_stop_"+current_index, "" + sys.time.get());
    sys.fs.conf.close();
    #print("autosaving...");
  }
}


function upd_timer {
  if (sProj == 0) {
    return;
  }

  if (sys.gui.getEventC(bBack) == EV_RELEASED) {
    sys.os.gui.setMainScr(scr);
    sys.gui.destroy(sProj);
    sProj = 0;
    keypBack = 0;
    return;
  }
  
  if (sys.gui.getEventC(bOdo) == EV_RELEASED) {
    sys.fs.conf.open(confCurrent);
    odo = not odo;
    sys.fs.conf.write("odo", ""+odo);
    
    if(odo) {
      sys.gui.setStr(bOdo, "Odo");
    } else {
      sys.gui.setStr(bOdo, "Trip");
    }
    
    sys.fs.conf.close();
  }
  
  if (sys.gui.getEvent(tPriceO) != EV_NONE) {
    if(sPrice != "" and sL != "" and sPriceO == "") {
      sPriceO = "" + (float(sL)*float(sPrice));
    }
  }
  
  if (sys.gui.getEvent(tPrice) != EV_NONE) {
    if(sPrice == "" and sL != "" and sPriceO != "") {
      sPrice = "" + (float(sPriceO)/float(sL));
    }
  }
  
  if (sys.gui.getEventC(bAdd) == EV_RELEASED) {
    if (isnum(sL)
        and isnum(sPrice)
        and isnum(sPriceO)
        and isnum(sKm)
        and float(sL) != 0.0
        and float(sPrice) != 0.0
        and float(sPriceO) != 0.0
        and float(sKm) != 0.0
  ) { 
      store_entry();
      show_status();
      sL = "";
      sPrice = "";
      sPriceO = "";
      sKm = "";
      count_values();
    } else {
      sys.gui.setStr(tStatus, "Fill the form first!");  
    }
    sys.os.hideKbd();
  }
  
  if (sys.gui.getEventC(bNote) == EV_RELEASED) {
    load_notes();
  }
  
  if (sys.gui.getEventC(bDate) == EV_RELEASED) {
    dateOvr = sys.o.date.add(sys.time.getYear(), sys.time.getMonth(), sys.time.getDay());
  }
  
  sys.o.date.update(dateOvr);
  
  if(sys.o.date.getOk(dateOvr)) {
    date = sys.time.setTs(sys.o.date.getYr(dateOvr), sys.o.date.getMon(dateOvr), sys.o.date.getDay(dateOvr), 0, 0, 0);
    sys.gui.setStr(bDate, sys.o.date.getDay(dateOvr) + ". " + sys.o.date.getMon(dateOvr) + ". " + sys.o.date.getYr(dateOvr));
    sys.o.date.clrOk(dateOvr);
  }
  
  sL = sys.os.gui.handleText(tL, sL);
  sPrice = sys.os.gui.handleText(tPrice, sPrice);
  sPriceO = sys.os.gui.handleText(tPriceO, sPriceO);
  sKm = sys.os.gui.handleText(tKm, sKm);
}


function update {
  if (sys.gui.getEventC(bNew) == EV_RELEASED) {
    new_overlay();
    new_ov_id = sys.o.setScr(new_screen);
    sys.o.setY(300);
  }
  
  if (sys.gui.getEventC(bRemove) == EV_RELEASED) {
    rem_overlay("test");
    rem_ov_id = sys.o.setScr(rem_screen);
    sys.o.setY(200);
  }
  
  if (sys.o.getId() == new_ov_id and sys.o.getId() != 0) {
    new_handle();
  }
  
  if (sys.o.getId() == rem_ov_id and sys.o.getId() != 0) {
    rem_handle();
  }
  
  handle_proj();
  
  sys.gui.setYscroll(sProjects, sys.gui.getValue(pSld) - 6);
  
  upd_timer();
  upd_notes();
  
  sys.os.gui.btnCtrl(sys.os.gui.getMainScr(), keypBack);
}

