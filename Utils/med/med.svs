function init {
  sys.gui.setRelInit(1);
  mainScr = sys.gui.addScreen();
  newScr = sys.gui.addScreen();
  
  fnameT = sys.gui.addText(1, 0, 6, 1, "Menu editor", mainScr);
  
  frame = sys.gui.addFrame(0, 1, 10, 10, newScr, mainScr);
  
  openB = sys.gui.addButton(1, 1, 3, 1, "Otevřít", newScr);
  newB = sys.gui.addButton(5, 1, 3, 1, "Nový", newScr);
  mainB = sys.gui.addButton(1, 3, 7, 1, "Otevřít main.mnu", newScr);
  
  newT = sys.gui.addText(1,1,7,1, "", newScr);
  newFname = "";
  currentFname = "";
  sys.gui.setTexEd(newT, 1);
  sys.gui.setVisible(newT, 0);
  createB = sys.gui.addButton(5, 3, 3, 1, "Vytvořit", newScr);
  nCancelB = sys.gui.addButton(1, 3, 3, 1, "Storno", newScr);
  sys.gui.setVisible(newT, 0);
  sys.gui.setVisible(createB, 0);
  sys.gui.setVisible(nCancelB, 0);
  
  # Toolbar
  
  upB = sys.gui.addButton(0, 13, 1, 1, "/\\", mainScr);
  downB = sys.gui.addButton(1, 13, 1, 1, "\\/", mainScr);
  addB = sys.gui.addButton(2, 13, 1, 1, "+", mainScr);
  
  removeB = sys.gui.addButton(4, 13, 1, 1, "-", mainScr);
  saveB = sys.gui.addButton(7, 13, 3, 1, "Uložit", mainScr);
  closeB = sys.gui.addButton(5, 13, 2, 1, "Zpět", mainScr);
  
  page = 0;
  
  
  
  # list screen
  
  listScr = sys.gui.addScreen();
  MAX_APP = 6*9; # max app count for the sda app screen
  array icons[MAX_APP];
  array names[MAX_APP];
  array files[MAX_APP];
  array iconsI[MAX_APP];
  listCount = 0;
  listCurrent = 0;
  selectedIcon = -1;
  
  array pageB[MAX_APP/9];
  
  for(local i = 0; i < MAX_APP/9; i++;) {
    pageB[i] = sys.gui.addButton(1 + i, 11, 1, 1, ""+i+1, mainScr);
    sys.gui.setVisible(pageB[i], 0);
  }
  sys.gui.setSelect(pageB[0], 1);
  
  tool_gray(1);
  
  # edit screen
  
  editScr = sys.gui.addScreen();
  sys.gui.setSpacing(editScr, 1, 1, 1, 1);
  eIconI = sys.gui.addIcon(3, 1, 3, 3, "", "none.p16", editScr);
  sys.gui.setTexAlign(eIconI, ALIGN_CENTER);
  eNameT = sys.gui.addText(1, 4, 7, 1, "", editScr);
  sys.gui.setTexEd(eNameT, 1);
  eName = "";
  eNamePrev = "";
  eFileB = sys.gui.addButton(1, 6, 7, 1, "Cesta k souboru", editScr);
  eOpenB = sys.gui.addButton(3, 8, 3, 1, "Otevřít", editScr);
  eCancelB = sys.gui.addButton(1, 8, 2, 1, "Zrušit", editScr);
  
  eOkB = sys.gui.addButton(6, 8, 2, 1, "Ok", editScr);
  
  sys.gui.setTexAlign(eCancelB, ALIGN_CENTER);
  sys.gui.setTexAlign(eOkB, ALIGN_CENTER);


  sys.os.gui.setMainScr(mainScr);
  
  # switch to /APPS
  sys.fs.chDir(1);
  
  if (typeof (arg0) == TYPE_STR) {
    print("med: opening: " + arg0);
    load_mnu(arg0);
  } else {
   sys.gui.setVisible(closeB, 0);
  }
  
  translate();
}

function translate {
  if (sys.os.getLang() == SVP_LANG_ENG) {
    sys.gui.setStr(openB, "Open");
    sys.gui.setStr(newB, "New");
    sys.gui.setStr(mainB, "Open main.mnu");
    sys.gui.setStr(createB, "Create");
    sys.gui.setStr(nCancelB, "Cancel");
    sys.gui.setStr(saveB, "Save");
    sys.gui.setStr(closeB, "Back");
    sys.gui.setStr(eFileB, "File path");
    sys.gui.setStr(eOpenB, "Open");
    sys.gui.setStr(eCancelB, "Cancel");
  }
}


function tool_gray {
  sys.gui.setGrayout(upB, arg0);
  sys.gui.setGrayout(downB, arg0);
  sys.gui.setGrayout(addB, arg0);
  sys.gui.setGrayout(removeB, arg0);
  sys.gui.setGrayout(saveB, arg0);
  sys.gui.setGrayout(closeB, arg0);
  
  for(local i = 0; i < MAX_APP/9; i++;) {
    sys.gui.setGrayout(pageB[i], arg0);
  }
}


function get_ext {
  # arg0 -> fname
  
  if (getcp(arg0, len(arg0) - 3) != ".") {
    return "";
  }
  return getcp(arg0, len(arg0) - 2) + getcp(arg0, len(arg0) -1) + getcp(arg0, len(arg0));
}


function clicked {
  if (sys.gui.getEventC(arg0) == EV_RELEASED) {
    return 1;
  }
  return 0;
}

function update_new {
  if(clicked(openB)) {
    sys.os.subProcess("lib/fsl2.svs", &newRet, 0, 1, "-lock -filter mnu");
  }
  if(clicked(newB)) {
    newFname = "";
    sys.gui.setVisible(newT, 1);
    sys.gui.setVisible(createB, 1);
    sys.gui.setVisible(nCancelB, 1);
  
    sys.gui.setVisible(newB, 0);
    sys.gui.setVisible(openB, 0);
    sys.gui.setVisible(mainB, 0);
    
    sys.gui.setTexAct(newT);
    sys.os.showKbd();
  }
  
  if(clicked(nCancelB)) {
    sys.gui.setVisible(newT, 0);
    sys.gui.setVisible(createB, 0);
    sys.gui.setVisible(nCancelB, 0);
  
    sys.gui.setVisible(newB, 1);
    sys.gui.setVisible(openB, 1);
    sys.os.hideKbd();
  }
  
  if(clicked(mainB)){
    load_mnu("main.mnu");
  }
  
  if(clicked(createB)) {
    tool_gray(0);
    sys.gui.setValue(frame, listScr);
    sys.os.hideKbd();
    if (get_ext(newFname)!= "mnu") {
      newFname += ".mnu";
    }
    currentFname = newFname;
    sys.gui.setTexEd(fnameT, 1);
  }
  
  newFname = sys.os.gui.handleText(newT, newFname);
}


function newRet {
  if(arg0 != "") {
    load_mnu(arg0);
  }
}

function load_mnu {
  local i;
  
  if (get_ext(arg0) != "mnu") {
    return;
  }
  
  if (sys.fs.csv.open(arg0)) {
    files[i] = sys.fs.csv.getCell(0, "");
    icons[i] = sys.fs.csv.getCell(1, "");
    names[i] = sys.fs.csv.getCell(2, "");
    i++;
    
    while(sys.fs.csv.lineFeed()) {
      files[i] = sys.fs.csv.getCell(0, "");
      icons[i] = sys.fs.csv.getCell(1, "");
      names[i] = sys.fs.csv.getCell(2, "");
      i++;
    }
    listCount = i;
    refresh();
    sys.gui.setValue(frame, listScr);
    tool_gray(0);
    currentFname = arg0;
    sys.fs.csv.close();
    sys.gui.setTexEd(fnameT, 1);
  }
}

function save_mnu {
  sys.fs.open(currentFname);
  sys.fs.seek(0);
  sys.fs.truncate();
  sys.fs.close();
  
  local i;
  sys.fs.csv.open(currentFname);
  
  for(i = 0; i < listCount; i++;) {
    sys.fs.csv.newLine(4);
    sys.fs.csv.setCell(0, files[i]);
    sys.fs.csv.setCell(1, icons[i]);
    sys.fs.csv.setCell(2, names[i]);
  }
  sys.fs.csv.close();

}

function set_page {
  sys.gui.setYscroll(listScr, 10*32*arg0);
  for(local i = 0; i < MAX_APP/9; i++;) {
    sys.gui.setSelect(pageB[i], arg0 == i);
  }
  sys.gui.setModif(frame);
  page = arg0;
}

function refresh {
  sys.gui.destroy(listScr);
  listScr = sys.gui.addScreen();
  sys.gui.setXscroll(listScr, 16);
  local i;
  for(i = 0; i < listCount; i++;) {
    iconsI[i] = sys.gui.addIcon(1 + 3*(i%3), 1 + 3*(i/3) + i/9, 3, 3, names[i], icons[i], listScr);
    sys.gui.setTexAlign(iconsI[i], ALIGN_CENTER);
    if (i == selectedIcon) {
      sys.gui.setStr(iconsI[i], "->" + names[i]);
    }
  }
  set_page(page);
  
  for(local i = 0; i < MAX_APP/9; i++;) {
    sys.gui.setVisible(pageB[i], i*9 < listCount);
  }
}

function update_list {
  local i;
  for(i = 0; i < listCount; i++;) {
    if (clicked(iconsI[i])) {
      if (i != selectedIcon) {
        if(selectedIcon != -1) {
          sys.gui.setStr(iconsI[selectedIcon], names[selectedIcon]);  
        }
        selectedIcon = i;
        sys.gui.setStr(iconsI[selectedIcon], "->" + names[selectedIcon]);
      } else {
        tool_gray(1);
        sys.gui.setValue(frame, editScr);
        listCurrent = i;
        eName = names[i];
        currentIcon = icons[i];
        currentFile = files[i];
        if (get_ext(currentFile) == "mnu") {
          sys.gui.setVisible(eOpenB, 1);
        } else {
          sys.gui.setVisible(eOpenB, 0);
        }
        sys.gui.setIcon(eIconI, currentIcon);
        sys.gui.setStr(eFileB, currentFile);
      }
    }
  }
}

function update_tb {
 
  for(local i = 0; i < MAX_APP/9; i++;) {
    if(sys.gui.getEventC(pageB[i]) == EV_RELEASED) {
      set_page(i);
    }
  }

  if (clicked(addB) and listCount < MAX_APP) {
    tool_gray(1);
    sys.gui.setValue(frame, editScr);
    listCurrent = listCount;
    
    eName = "";
    currentIcon = "Icons/none.p16";
    currentFile = "";
    sys.gui.setVisible(eOpenB, 0);
    sys.gui.setIcon(eIconI, currentIcon);
    sys.gui.setStr(eFileB, "Select file");
  }
  
  if (clicked(saveB)) {
    save_mnu();
  }
  
  if (clicked(closeB)) {
    sys.os.exit();
    return;
  }
  
  if (clicked(upB)) {
    if (selectedIcon > 0) {
    local name;
    local file;
    local icon;
    
    icon = icons[selectedIcon - 1];
    file = files[selectedIcon - 1];
    name = names[selectedIcon - 1];
    
    icons[selectedIcon - 1] = icons[selectedIcon];
    files[selectedIcon - 1] = files[selectedIcon];
    names[selectedIcon - 1] = names[selectedIcon];
    
    icons[selectedIcon] = icon;
    files[selectedIcon] = file;
    names[selectedIcon] = name;
    
    selectedIcon--;
    
    if (page != selectedIcon/9) {
      set_page(selectedIcon/9);
    }
    
    refresh();
    }
  }
  
  if (clicked(downB)) {
    if (selectedIcon < (listCount - 1)) {
    local name;
    local file;
    local icon;
    
    icon = icons[selectedIcon + 1];
    file = files[selectedIcon + 1];
    name = names[selectedIcon + 1];
    
    icons[selectedIcon + 1] = icons[selectedIcon];
    files[selectedIcon + 1] = files[selectedIcon];
    names[selectedIcon + 1] = names[selectedIcon];
    
    icons[selectedIcon] = icon;
    files[selectedIcon] = file;
    names[selectedIcon] = name;
    
    selectedIcon++;
    
    if (page != selectedIcon/9) {
      set_page(selectedIcon/9);
    }
    
    refresh();
    }
  }
  
  if (clicked(removeB) and (selectedIcon != -1)) {
    local i;
    
    for(i = selectedIcon; i < (listCount - 1); i++;) {
      icons[i] = icons[i + 1];
      files[i] = files[i + 1];
      names[i] = names[i + 1];  
    }
    selectedIcon = -1;
    listCount--;
    refresh();
  }
  
  currentFname = sys.os.gui.handleText(fnameT, currentFname);
}

function update_ed {
  if(clicked(eCancelB)) {
    tool_gray(0);
    sys.gui.setValue(frame, listScr);
    sys.gui.texDeact();
  }
  
  if(clicked(eFileB)) {
    sys.os.subProcess("lib/fsl2.svs", &fileRet, currentFile, 1, "-lock -filter svs");
  }
  
  if(clicked(eIconI)) {
    sys.os.subProcess("lib/fsl2.svs", &icoRet, currentIcon, 1, "-lock -filter p16");
  }
  
  eName = sys.os.gui.handleText(eNameT, eName);
  if (eName != eNamePrev) {
    sys.gui.setStr(eIconI, eName);
    eNamePrev = eName;
  }
  
  if (clicked(eOpenB)) {
    sys.os.subProcess("Utils/med/med.svs", "",currentFile, 0, 0);
  }
  
  if (clicked(eOkB)) {
    if (listCurrent == listCount) {
      listCount++;
    }
    icons[listCurrent] = currentIcon;
    files[listCurrent] = currentFile;
    names[listCurrent] = eName;
    tool_gray(0);
    sys.gui.setValue(frame, listScr);
    refresh();
    sys.gui.texDeact();
    set_page(listCurrent/9);
  }
}

function fileRet {
  print(arg0 + " " + arg1);
  if (arg1 == 1 and arg0 != "" and (get_ext(arg0) == "svs" or get_ext(arg0) == "mnu")) {
    currentFile = arg0;
    sys.gui.setStr(eFileB, arg0);
    if (get_ext(currentFile) == "mnu") {
      sys.gui.setVisible(eOpenB, 1);
    } else {
      sys.gui.setVisible(eOpenB, 0);
    }
  }
}

function icoRet {
  print(arg0 + " " + arg1);
  if (arg1 == 1 and arg0 != "" and get_ext(arg0) == "p16") {
    currentIcon = arg0;
    sys.gui.setIcon(eIconI, arg0);
  }
}

function update {
  update_new();
  update_tb();
  update_ed();
  update_list();
  sys.os.gui.btnCtrl(sys.os.gui.getMainScr(), 0);
}

