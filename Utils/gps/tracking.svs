
function trk_reset {
  trk_len = 0;
  trk_rlen = 0;
  track_dist_p = 0.0;
  track_enabled = 1;
  track_display = 1;
  track_file = sys.time.getYear() + "-"
               + sys.time.getMonth() + "-"
               + sys.time.getDay() + "-"
               + sys.time.getHr() + "-" + sys.time.getMin() + ".gps";
  
  sys.gui.setStr(tTrInfo3, "(" + track_file + ")");
  
  #sys.hw.lockSleep(1);
}


function trk_add_point { #lat, lon
  if(trk_len != 0) {
    if (arg0 == trk_lat[trk_len - 1] and trk_lon[trk_len - 1] == arg1) {
      return;
    }
    
    if (get_distance(arg0, arg1, trk_lat[trk_len - 1], trk_lon[trk_len - 1]) < 40.0) {
      print("Points too close together...");
      return;
    }
  }
  
  if(trk_len > 1) {
    local ab_len = get_distance(arg0, arg1, trk_lat[trk_len - 1], trk_lon[trk_len - 1])
                   + get_distance(trk_lat[trk_len - 1], trk_lon[trk_len - 1], trk_lat[trk_len - 2], trk_lon[trk_len - 2]);
    
    local c_len = get_distance(arg0, arg1, trk_lat[trk_len - 2], trk_lon[trk_len - 2]);
    
    local d = 0.0;
    
    if (ab_len > c_len) {
      d = ab_len - c_len;
    } else {
      d = c_len - ab_len;
    }
    
    if (d < ab_len*0.001) {
      trk_lat[trk_len - 1] = arg0;
      trk_lon[trk_len - 1] = arg1;
      return;
    }
  }
  
  trk_lat[trk_len] = arg0;
  trk_lon[trk_len] = arg1;
  
  trk_len++;
  
  if(trk_len == len(trk_lat) - 1) {
    trk_len = 0;
    track_dist_p += track_dist;
  }
  
  sys.fs.chDir();
  
  sys.fs.chDir("appdata");
  sys.fs.chDir("gps");
  
  sys.fs.conf.open(track_file);
  
  sys.fs.conf.write("lat_"  + trk_rlen, "" + arg0);
  sys.fs.conf.write("lon_"  + trk_rlen, "" + arg1);
  sys.fs.conf.write("time_" + trk_rlen, "" + sys.time.get());
  sys.fs.conf.write("alt_"  + trk_rlen, "" + arg2);
  
  sys.fs.conf.close();
  
  sys.fs.chDir(1);
  sys.fs.chDir(get_folder(sys.os.getAppPath()));
  
  trk_rlen++;
  sys.gui.setStr(tTrInfo2, "Data: " + trk_len + " points");
}


function trk_draw {
  local i;
  local lat_pre = 0.0;
  local lon_pre = 0.0;
  track_dist = 0.0;
  
  for(i = 0; i < trk_len; i++;) {
    draw_dot(trk_lat[i], trk_lon[i], sys.ds.mixColor(200, 0, 0));
    if(lat_pre != 0.0) {
      draw_line(lat_pre, lon_pre, trk_lat[i], trk_lon[i], sys.ds.mixColor(200, 0, 0));
      track_dist += get_distance(lat_pre, lon_pre, trk_lat[i], trk_lon[i]);
    }
    lat_pre = trk_lat[i];
    lon_pre = trk_lon[i];
  }
  
  sys.gui.setStr(tTrInfo, "Distance: " + track_dist + track_dist_p + " m");
}


function trk_load {
  if(arg0 == "") {
    return;
  }
  
  trk_reset();
  
  track_enabled = 0;
  sys.gui.setStr(tBNew, "Close");
  
  sys.fs.chDir();
  
  track_file = arg0;
   
  sys.fs.conf.open(track_file);
  
  while(sys.fs.conf.exists("lat_" + trk_rlen)) {
    trk_lat[trk_len] = float(sys.fs.conf.read("lat_" + trk_rlen));
    trk_lon[trk_len] = float(sys.fs.conf.read("lon_" + trk_rlen));
    #trk_time[trk_len] = float(sys.fs.conf.read("time_" + trk_rlen));
    
    trk_len++;
    
    if(trk_len == len(trk_lat) - 1) {
      trk_draw(); # to compute the dist, and also draw it on screen
      trk_len = 0;
      track_dist_p += track_dist;
    }
    
    trk_rlen++;
  }

  sys.fs.conf.close();
  
  sys.fs.chDir(1);
  sys.fs.chDir(get_folder(sys.os.getAppPath()));
  
  sys.gui.setStr(tTrInfo2, "Data: " + trk_len + " points");
}


function trk_stop {
  track_enabled = 0;
  track_display = 0;
  sys.gui.setStr(tTrInfo, "");
  sys.gui.setStr(tTrInfo2, "");
  sys.gui.setStr(tTrInfo3, "");
}
