function init {
sys.heatmapStart();
  sys.os.checkVer(1110);
  array namP[60];
  sys.os.setSingular();
  sys.fs.conf.open("appdata/reader.cfg");

  bkCnt = 0;
  mode = 0;
  preload = -1;

  sel_in = 0;
  pos_down = 0;
  pos_up = 0;
  

  x = 0;
  while (sys.fs.conf.exists("nazev" + x)) {
    namP[x] = sys.fs.conf.read("nazev" + x);
    if (sys.fs.conf.readInt("active" + x, 0) == 1) {
      print("aktivace knihy" + namP[x]);
      preload = x;
    }
    x++;
  }
  bkCnt = x;

  init_main();
  init_sel();
  init_read();

  if(preload >= 0) {
    sel_id = preload;
    print("sel_id=" + sel_in);
    read_prep();
    read();
  }
  #sys.profiler(1);
}

function init_main {
  scr = sys.gui.addScreen();
  sys.os.gui.setMainScr(scr);

  mainBar = sys.gui.addSliderV(9, 3, 10, 12, (48) * bkCnt, 0, scr);

  scrS = sys.gui.addScreen();

  sys.gui.setScreen(scrS, scr);
  sys.gui.setXYXY(scrS, 0, 3, 9, 12);
  sys.gui.setYcell(scrS, 16);

  if (sys.os.getLang() == SVP_LANG_CZ) {
    sys.gui.addText(1, 1, 9, 2, "Čtečka knih", scr);
  } else {
    sys.gui.addText(1, 1, 9, 2, "Book reader", scr);
  }
  array btnP[60];

  x = 0;
  while (x < bkCnt) {
    btnP[x] = sys.gui.addButton(1, 1 + x*4, 8, 4 + x*4, namP[x], scrS);
    x++;
  }

}

function init_sel {
  scr1 = sys.gui.addScreen();
  sel_txt = sys.gui.addText(1, 1, 9, 2, "None", scr1);
  if (sys.os.getLang() == SVP_LANG_CZ) {
    sel_back = sys.gui.addButton(1, 11, 4, 12, "Zpět", scr1);
    sel_ok = sys.gui.addButton(6, 11, 9, 12, "Číst", scr1);
    sel_bgn = sys.gui.addButton(5, 13, 10, 14, "Číst od začátku", scr1);
    sel_pos = sys.gui.addButton(1, 13, 4, 14, "Pozice", scr1);
  } else {
    sel_back = sys.gui.addButton(1, 11, 4, 12, "Back", scr1);
    sel_ok = sys.gui.addButton(6, 11, 9, 12, "Read", scr1);
    sel_bgn = sys.gui.addButton(5, 13, 10, 14, "Reset position", scr1);
    sel_pos = sys.gui.addButton(1, 13, 4, 14, "Position", scr1);
  }
  sel_sld = sys.gui.addSliderH(1, 4, 9, 5, 100, 0, scr1);
  sys.gui.setVisible(sel_sld, 0);
  sel_image = sys.gui.addImage(2, 2, 9, 11, "", scr1);

  sel_id = 0;
}

function init_read {
  scr2 = sys.gui.addScreen();
  sys.gui.setRelInit(1);
  txt = sys.gui.addText(0, 0, 10, 12, "Empty", scr2);
  if (sys.os.getLang() == SVP_LANG_CZ) {
    rd_back = sys.gui.addButton(0, 12, 2, 2, "Zpět", scr2);
  } else {
    rd_back = sys.gui.addButton(0, 12, 2, 2, "Back", scr2);
  }
  rd_r  = sys.gui.addButton(3, 12, 1, 1, "R", scr2);
  rd_up = sys.gui.addButton(5, 12, 2, 2, "/\\", scr2);
  rd_dn = sys.gui.addButton(8, 12, 2, 2, "\\/", scr2);
  sys.gui.setRelInit(0);
}

function r_read {
  sys.gui.setRelInit(1);
  if (arg0 == 0) {
    sys.gui.setXYXY(txt,0, 0, 10, 12);
    sys.gui.setXYXY(rd_back,0, 12, 2, 2);
    sys.gui.setXYXY(rd_r,3, 12, 1, 1);
    sys.gui.setXYXY(rd_up,5, 12, 2, 2);
    sys.gui.setXYXY(rd_dn,8, 12, 2, 2);
  } else {
    sys.gui.setXYXY(txt,0, 0, 13, 10);
    sys.gui.setXYXY(rd_back,13, 0, 2, 2);
    sys.gui.setXYXY(rd_r,13, 3, 1, 1);
    sys.gui.setXYXY(rd_up,13, 5, 2, 2);
    sys.gui.setXYXY(rd_dn,13, 7, 2, 2);
  }
  sys.gui.setRelInit(0);
}

function update {
  if (mode == 0) {
    upd_s();
  }

  if (mode == 1) {
    upd_sel();
  }

  if (mode == 2) {
    upd_rd();
  }
}

function upd_s {
  sys.gui.setYscroll(scrS, sys.gui.getValue(mainBar));
  x = 0;
  while (x < bkCnt) {
    if (sys.gui.getEvent(btnP[x]) == EV_RELEASED) {
      print("pressed" + x);
      sys.gui.setStr(sel_txt, namP[x]);
      sys.gui.setStr(sel_image, sys.fs.conf.read("title" + x));
      sel_id = x;
      sys.os.gui.setMainScr(scr1);
      sel_in = 0;

      if (sys.fs.conf.readInt("line" + sel_id, 0) != 0) {
        sys.gui.setVisible(sel_bgn, 1);
      } else {
        sys.gui.setVisible(sel_bgn, 0);
      }

      read_prep();

      sys.gui.setParam(sel_sld, sys.fs.size());
      print("load:sel_id=" + sel_id);
      sys.gui.setValue(sel_sld, line);
      sys.gui.setVisible(sel_sld, 0);
      sys.gui.setVisible(sel_image, 1);

      mode = 1;
    }
    sys.gui.setEvent(btnP[x], 0);
    x++;
  }
}

function upd_sel {
  if (sys.gui.getEventC(sel_back) == EV_RELEASED) {
    sys.os.gui.setMainScr(scr);
    mode = 0;
  }

  if (sys.gui.getEventC(sel_ok) == EV_RELEASED) {
    sys.fs.conf.write("active" + sel_id, "1");
    line = sys.gui.getValue(sel_sld);
    read();
  }

  if (sys.gui.getEventC(sel_bgn) == EV_RELEASED) {
    sys.fs.conf.write("active" + sel_id, "1");
    sys.fs.conf.write("line" + sel_id, "0");
    line = 0;
    read();
  }

  if (sys.gui.getEventC(sel_pos) == EV_RELEASED){
    sys.gui.setModif(scr1);
    sys.gui.setVisible(sel_sld, 1);
    sys.gui.setVisible(sel_image, 0);
  }
}

function read_prep {
  sys.fs.open(sys.fs.conf.read("file" + sel_id));
  line = sys.fs.conf.readInt("line" + sel_id, 0);
}

function read {
  #sel_id - id knihy
  sys.os.gui.setMainScr(scr2);
  mode = 2;
  sys.gui.setTexFit(txt, 1);
  
  print("load:sel_id=" + sel_id);
  
  scroll_text();
}

function upd_rd {

  if (sys.gui.getEventC(rd_back) == EV_RELEASED) {
    sys.os.gui.setMainScr(scr);
    mode = 0;
    sys.fs.close();
    sys.fs.conf.write("active" + sel_id, "0");
    sys.fs.conf.write("line" + sel_id, "" + line);
    sys.os.gui.setLandscape(0);
    r_read(0);
  }
  
  if (sys.gui.getEventC(rd_r) == EV_RELEASED) {
    sys.os.gui.setLandscape(1 - sys.os.gui.getLandscape());
    r_read(sys.os.gui.getLandscape());
  }

  if (sys.gui.getEventC(rd_dn) == EV_RELEASED or sys.hw.btn.getEvent(BTN_DOWN) == EV_PRESSED) {
    pos_down = 3;
  }
  sys.hw.btn.clrEvent(BTN_DOWN);

  if (sys.gui.getEventC(rd_up) == EV_RELEASED or sys.hw.btn.getEvent(BTN_UP) == EV_PRESSED) {
    pos_up = 2;
    #gc(0);
  }
  sys.hw.btn.clrEvent(BTN_UP);

  if (pos_up > 0) {
    if(line >= 50) {
      line -= 50;
    } else {
      line = 0;
    }
    scroll_text();
    sys.gui.setStr(txt, substr(sys.gui.getStr(txt), linechars(sys.gui.getStr(txt), 0) + 1, len(sys.gui.getStr(txt))));
    pos_up--;

    if (pos_up == 0) {
      sys.fs.conf.write("line" + sel_id, "" + line);
    }
  }

  if (pos_down > 0) {
    
    local lc = linechars(sys.gui.getStr(txt), 1);

    line += lc;
    scroll_text();
    if (lc != 0) { # because of some error in garbage collection, function sometimes fails
      pos_down--;
    }
    
    if (pos_down == 0) {
      gc(7000);
      sys.fs.conf.write("line" + sel_id, "" + line);
    }
  }
}

function scroll_text {
  sys.fs.seek(line);
  #t = substr(t, linechars, len(t));
  sys.gui.setStr(txt, sys.fs.readChars(800));
}

function linechars #*str, rlen?*# {
  local i;
  local l;
  local c;
  local lastspace = 0;
  
  
  for(i = 0; i < len(arg0); i++;) {
    c = getcp(arg0, i);
    if (c == "\n") {
      l = substr(arg0, 0, i);
      #gc(1800);
      return (arg1*rlen(l) + (1 - arg1)*len(l)) ;
    }
    
    if (c == " ") {
      l = substr(arg0, 0, i);
      if (sys.ds.getTextWidth(l) > 320 + 90*sys.os.gui.getLandscape()) {
        #gc(1800);
        return lastspace;
      }
      lastspace = (arg1*rlen(l) + (1 - arg1)*len(l));
    }
  }
  
  
  print("nothing triggered " + len(arg0));
  #print("arg0 "+arg0);
  return 0;
}

function exit{
  sys.fs.close();
  sys.fs.conf.close();
  sys.heatmapStop();
  sys.heatmapPrint();
}
