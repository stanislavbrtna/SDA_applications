function init {
	initSelect();
	initRun();

	splashScr = sys pAddScreen();
	splash = sys pAddImage(1, 2, 9, 12, "sVload.p16", splashScr);

	sys cntSet(5000);
	sys pSetMainScr(splashScr);
}

function update {
	if (sys pGetMainScr() == splashScr) {
		if (sys cntGet() == 0 or (sys pGetEvent(splash) == EV_PRESSED)) {
			sys pSetMainScr(selectScr);
		}
	}

	if (sys pGetMainScr() == selectScr) {
		updateSelect();
	}

	if (sys pGetMainScr() == runScr) {
		updateRun();
	}
}

function initSelect {
	selectScr = sys pAddScreen();
	sys pAddText(1, 1, 10, 2, "S! Runtime pro SDA", selectScr);

	btn_ar = sys arrayNew(10);
	name_ar = sys arrayNew(10);
	x = 0;
	for(findfil = sys fFind("sva", "sv"); findfil != "" and x < 10; findfil = sys fFindNext();) {
		findfil = "sv/" + findfil;
		print("file: " + findfil);
		sys arraySet(name_ar, x, findfil);

		sys cOpen(findfil);

		sys arraySet(btn_ar, x, sys pAddButton( 1, 2 + x, 7, 3 + x, sys cKeyRead("name"), selectScr));

		sys cClose();

		x++;
	}
	progCount = x;
}

function updateSelect {

	for (x = 0; x < progCount; x++;) {
		if (sys pGetEventC(sys arrayGet(btn_ar, x)) == EV_RELEASED) {
			appToLoad = sys arrayGet(name_ar, x);
			loadApp();
		}
	}

}

function loadApp {
	vmLink = 1;
	vmWait = 0;

	sys cOpen(appToLoad);
	sys pSetMainScr(runScr);

	print("using: " + appToLoad);
}

function redrawText {
	local x;
	local y;
	#local out;
	if (arg0) {
		sys sxSetArea(0, 64, 318, 440);
	} else {
		sys sxSetArea(0, 64, 318, 240);
	}
	sys sxClearArea(sys pGetColor(COL_BACKGROUND));
	if (ppm_background != ""){
		sys pDrawPPM(0, 64, 1, ppm_background);
	}

	for(x = 0; x < OUT_LINES; x++;) {
		out = "";
		string = sys arrayGet(volOutLines_ar, x);
		for (y = 0; y < len(sys arrayGet(volOutLines_ar, x)) + 1; y++;) {

			if (getcp(string, y) != "##" )
			{
				c = getcp(string, y);
				out = out + c;
			} else {
				out = out + "\n";
			}


		}
		sys sxSetTextFit(1, 318);
		sys sxDrawText(10, 17 * x, "" + out,sys pGetColor(COL_TEXT));
	}

}

function initRun {
	runScr = sys pAddScreen();

	volBtn_ar = sys arrayNew(7);
	volLink_ar = sys arrayNew(7);
	volText_ar = sys arrayNew(7);

	OUT_LINES = 9;
	FLT_VARS = 5;
	STR_VARS = 5;

	volOutLines_ar = sys arrayNew(OUT_LINES);

	fltVar_ar = sys arrayNew(FLT_VARS);

	strVar_ar = sys arrayNew(STR_VARS);

	for(x = 0; x < OUT_LINES; x++;) {
		sys arraySet(volOutLines_ar, x, "");
	}

	linksBtn  = sys pAddButton(2, 13, 8, 14, "Volby", runScr);


	ppm_background = "";
	inText = "";
	inTextEl  = sys pAddText(1, 7, 7, 8, inText, runScr);
	sys pSetTexEd(inTextEl, 1);
	inTextOk  = sys pAddButton(7, 7, 10, 8, "Ok", runScr);

	showInp(0);

}

function showInp {
	sys pSetVisible(inTextEl, arg0);
	sys pSetVisible(inTextOk, arg0);
	if (arg0){
		sys keybShow();
		sys pSetTexAct(inTextEl);
	} else {
		sys keybHide();
		redrawText();
	}
}

function updateRun {
	if (sys pGetEventC(linksBtn) == EV_RELEASED) {
		addOverlay();
	}

	if (ovr_id == sys pGetOvrId() and sys pGetOvrId() != 0) {
		handleOverlay();
	}

	vmLoop();

	inText = sys pHandleText(inTextEl, inText);

	if(sys getRadraw()) {
		redrawText(sys pGetVisible(inTextOk) == 0);
	}
}


#*
	Implementuje sub-set originálního S! jazyka.
	Cílem implementace je dosáhnout 100% kompatibility s programy:
	- calc.sva
	- kecak.sva
	- about.sva
	- prohl.sva

	Neobstahuje všechny příkazy zmiňované v:
			s! - dokumentace příkazů, Revize č.1
	Ovšem obsahuje starší nedokumentované příkazy.
*#
function vmLoop {
	if (vmWait) {
		return;
	}

	local x;
	local y;
	local z;

	# programy občas skáčou na neexistující řádek 0
	if (not sys cKeyExists("" + vmLink) and vmLink != 0) {
		print("linka: " + vmLink + " neexistuje!");
		vmWait = 1;
		return;
	}

	cmd = sys cKeyRead("" + vmLink);
	if (cmd == "cudl") {
		vmLink++;
		for(x = 0; x < 7; x++;) {
			sys arraySet(volText_ar, x, sys cKeyRead("" + vmLink));
			vmLink++;
		}

		for(x = 0; x < 7; x++;) {
			sys arraySet(volLink_ar, x, sys cKeyRead("" + vmLink));
			vmLink++;
		}
		return;
	}

	if (cmd == "wait") {
		vmWait = 1;
		return;
	}

	if (cmd == "link") {
		vmLink++;
		vmLink = num (sys cKeyRead("" + vmLink));
		print("link: jump: " + vmLink);
		return;
	}

	if (cmd == "ds_text") {
		vmLink++;
		x = num (sys cKeyRead("" + vmLink));
		vmLink++;
		sys arraySet(volOutLines_ar, x - 1, sys cKeyRead("" + vmLink));
		redrawText();
		vmLink++;
		return;
	}

	if (cmd == "random4") {
		vmLink++;
		vmLink = vmLink + sys rnd() % 4;
		vmLink = num (sys cKeyRead("" + vmLink));
		print("random4: jump: " + vmLink);
		return;
	}

	if (cmd == "addprom") {
		vmLink++;
		x = num (sys cKeyRead("" + vmLink));
		vmLink++;

		if (x >= 0 and x < FLT_VARS) {
			sys arraySet(fltVar_ar, x, float(sys cKeyRead("" + vmLink)));
			vmLink++;
		} else {
			print("error: nedostatek FLT VARs")
		}
		return;
	}

	if (cmd == "zispr") {
		if (sys pGetVisible(inTextOk) == 0) {
			showInp(1);
			val = 0;
			inText = "";
			return;
		} else {
			if (sys pGetEventC(inTextOk) == EV_RELEASED) {
				showInp(0);
			} else {
				return;
			}
		}
		vmLink++;
		x = num (sys cKeyRead("" + vmLink));
		vmLink++;

		if (x >= 0 and x < FLT_VARS) {
			sys arraySet(fltVar_ar, x, float(inText));
		} else {
			print("error: nedostatek FLT VARs")
		}
		return;
	}

	if (cmd == "addstr" or cmd == "vczstr") {
		vmLink++;
		x = num (sys cKeyRead("" + vmLink));
		vmLink++;

		if (x >= 0 and x < STR_VARS) {
			sys arraySet(strVar_ar, x, sys cKeyRead("" + vmLink));
			vmLink++;
		} else {
			print("error: nedostatek STR VARs");
		}
		return;
	}

	if (cmd == "zisstr") {
		if (sys pGetVisible(inTextOk) == 0) {
			showInp(1);
			val = 0;
			inText = "";
			return;
		} else {
			if (sys pGetEventC(inTextOk) == EV_RELEASED) {
				showInp(0);
			} else {
				return;
			}
		}
		vmLink++;
		x = num (sys cKeyRead("" + vmLink));
		vmLink++;

		if (x >= 0 and x < STR_VARS) {
			sys arraySet(strVar_ar, x, inText);
		} else {
			print("error: nedostatek STR VARs");
		}
		return;
	}

	if (cmd == "secti" or cmd == "scipr") {

		vmLink++;
		x = num (sys cKeyRead("" + vmLink));
		vmLink++;
		y = num (sys cKeyRead("" + vmLink));
		vmLink++;
		z = num (sys cKeyRead("" + vmLink));
		vmLink++;

		print("x: " + x + " y: " + y + " z: " + z);
		if (x >= 0 and x < FLT_VARS and y >= 0 and y < FLT_VARS and z >= 0 and z < FLT_VARS) {
			sys arraySet(fltVar_ar, z, sys arrayGet(fltVar_ar, x) + sys arrayGet(fltVar_ar, y));
		} else {
			print("error: nedostatek FLT VARs");
		}
		return;
	}

	if (cmd == "odecti" or cmd == "odcpr") {

		vmLink++;
		x = num (sys cKeyRead("" + vmLink));
		vmLink++;
		y = num (sys cKeyRead("" + vmLink));
		vmLink++;
		z = num (sys cKeyRead("" + vmLink));
		vmLink++;

		print("x: " + x + " y: " + y + " z: " + z);
		if (x >= 0 and x < FLT_VARS and y >= 0 and y < FLT_VARS and z >= 0 and z < FLT_VARS) {
			sys arraySet(fltVar_ar, z, sys arrayGet(fltVar_ar, x) - sys arrayGet(fltVar_ar, y));
		} else {
			print("error: nedostatek FLT VARs");
		}
		return;
	}

	if (cmd == "nasob" or cmd == "naspr") {

		vmLink++;
		x = num (sys cKeyRead("" + vmLink));
		vmLink++;
		y = num (sys cKeyRead("" + vmLink));
		vmLink++;
		z = num (sys cKeyRead("" + vmLink));
		vmLink++;

		print("x: " + x + " y: " + y + " z: " + z);
		if (x >= 0 and x < FLT_VARS and y >= 0 and y < FLT_VARS and z >= 0 and z < FLT_VARS) {
			sys arraySet(fltVar_ar, z, sys arrayGet(fltVar_ar, x) * sys arrayGet(fltVar_ar, y));
		} else {
			print("error: nedostatek FLT VARs");
		}
		return;
	}

	if (cmd == "del" or cmd == "delpr") {

		vmLink++;
		x = num (sys cKeyRead("" + vmLink));
		vmLink++;
		y = num (sys cKeyRead("" + vmLink));
		vmLink++;
		z = num (sys cKeyRead("" + vmLink));
		vmLink++;

		print("x: " + x + " y: " + y + " z: " + z);
		if (x >= 0 and x < FLT_VARS and y >= 0 and y < FLT_VARS and z >= 0 and z < FLT_VARS) {
			sys arraySet(fltVar_ar, z, sys arrayGet(fltVar_ar, x) / sys arrayGet(fltVar_ar, y));
		} else {
			print("error: nedostatek FLT VARs");
		}

		return;
	}

	if (cmd == "vikpr") {
		vmLink++;
		x = num (sys cKeyRead("" + vmLink));
		vmLink++;
		y = num (sys cKeyRead("" + vmLink));
		vmLink++;
		sys arraySet(volOutLines_ar, x - 1, sys cKeyRead("" + vmLink) + sys arrayGet(fltVar_ar, y));
		redrawText();
		vmLink++;
		print("vikpr: end: "+vmLink);
		return;
	}

	if (cmd == "strrovno") {
		vmLink++;
		x = num (sys cKeyRead("" + vmLink));
		vmLink++;
		y = num (sys cKeyRead("" + vmLink));
		vmLink++;
		z = num (sys cKeyRead("" + vmLink));
		vmLink++;

		if (x >= 0 and x < STR_VARS and y >= 0 and y < STR_VARS) {
			print("compare: "+ sys arrayGet(strVar_ar, x)+ " a " + sys arrayGet(strVar_ar, y));
			if (("" + sys arrayGet(strVar_ar, x)) == (""+sys arrayGet(strVar_ar, y))) {
				vmLink = num(z);
			}
			return;
		} else {
			print("error: nedostatek FLT VARs");
		}
	}

	if (cmd == "vikstr") {
		vmLink++;
		x = num (sys cKeyRead("" + vmLink));
		vmLink++;
		y = num (sys cKeyRead("" + vmLink));
		vmLink++;
		sys arraySet(volOutLines_ar, x - 1, sys cKeyRead("" + vmLink) + sys arrayGet(strVar_ar, y));
		redrawText();
		vmLink++;
		print("vikstr: end: "+vmLink);
		return;
	}

	if (cmd == "ds_background") {
		vmLink++;
		ppm_background = sys cKeyRead("" + vmLink);
		redrawText();
		vmLink++;
		return;
	}

	if (cmd == "ds_stop_background") {
		vmLink++;
		ppm_background = "";
		redrawText();
		return;
	}

	# přeskočení neznámých příkazů
	print("Neznam: "+cmd);
	vmLink++;
}

function addOverlay {
	linkScr = sys pAddScreen();
	for(x = 0; x < 7; x++;) {
		sys arraySet(volBtn_ar, x, sys pAddButton(0, 1 + x, 8, 2 + x, "" + sys arrayGet(volText_ar, x), linkScr));
	}
	x++;
	linkBack = sys pAddButton(0, 1 + x, 8, 2 + x, "Zpět", linkScr);

	ovr_id = sys pSetOvrScr(linkScr);
}

function handleOverlay {
	if (sys pGetEventC(linkBack) == EV_RELEASED) {
		sys pOvrDestroy();
		return;
	}

	for(x = 0; x < 7; x++;) {
		if (sys pGetEventC(sys arrayGet(volBtn_ar, x)) == EV_RELEASED) {
			vmWait = 0;
			vmLink = num(sys arrayGet(volLink_ar, x));
			print("jump: " + vmLink);
			sys pOvrDestroy();
			return;
		}
	}
}
