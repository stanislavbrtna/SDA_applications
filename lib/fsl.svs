 # file selector overlay, heavily based on SDA Commander code.
 # arg0 - [str]default path
 # arg1 - [num] 1 - APPS 0 - DATA
 # returns filename with path in first argument and second argument specifies if the path is in data (0) or apps (1)
 
 # v1.2 : Arguments added
 # v1.1 : Error when tapped outside overlay fixed.
 #        Data and apps buttons have highlight now.

function init {
  scr = sys.gui.addScreen();
  sys.gui.setRelInit(1);

  if (sys.os.getLang() == SVP_LANG_CZ) {
    sys.gui.addText(0, 0, 8, 1, "Vyber soubor:", scr);
    btnCancel = sys.gui.addButton(6, 12, 3, 1, "ZruÅ¡it", scr);
  } else {
    sys.gui.addText(0, 0, 8, 1, "Choose file:", scr);
    btnCancel = sys.gui.addButton(6, 12, 3, 1, "Cancel", scr);
  }

  file_scr = sys.gui.addScreen();
  scrollbar = sys.gui.addSliderV(8, 2, 1, 10, 100, 0, scr);

  sys.gui.setScreen(file_scr, scr);
  sys.gui.setXYXY(file_scr, 0, 2, 8, 10);

  bUp = sys.gui.addButton(0, 1, 1, 1, "/\\", scr);
  bData = sys.gui.addButton(2, 1, 2, 1, "Data", scr);
  bApps = sys.gui.addButton(4, 1, 2, 1, "Apps", scr);
  
  sys.gui.setSelect(bData, 1);

  selfOvr = sys.o.setScr(scr);
  sys.o.setXYXY(16, 48, 304, 464);
  array fScrBtns[200];
  array path[30];

  rldFiles();

  sys.gui.setGrayout(bUp, 1);

  inApps = 0;
  selectedFile = "";
  upCount = 0;
  
  if (typeof (arg1) == TYPE_NUM) {
    if (arg1 == 1) {
      sys.fs.chDir(1);
      sys.gui.setSelect(bData, 0);
      sys.gui.setSelect(bApps, 1);
      inApps = 1;
      rldFiles();
    } else {
      sys.fs.chDir();
      sys.gui.setSelect(bData, 1);
      sys.gui.setSelect(bApps, 0);
      inApps = 0;
      rldFiles();
    }
  }
  
  if (typeof (arg0) == TYPE_STR) {
    print("defdir: " + arg0 + "(" + getFolder(arg0) + ")");
    sys.fs.chDir(getFolder(arg0));
    print(getPath(arg0));
    updatePath(arg0);
    upCount = getUpCount(arg0);
    rldFiles();
    sys.gui.setGrayout(bUp, 0);
  }
}

function getFolder {
  for(arg2 = len(arg0); arg2 > 0; arg2--;) {
    if (getcp(arg0, arg2) == "/") {
      return substr(arg0, 0, arg2);
    }
  }
}

function getUpCount {
  arg4 = 0;
  for(arg2 = len(arg0); arg2 > 0; arg2--;) {
    if (getcp(arg0, arg2) == "/") {
      arg4++;
    }
  }
  return arg4;
}


function updatePath {
  arg4 = 0;
  arg5 = 0;
  for(arg2 = 0; arg2 < len(arg0); arg2++;) {
    if (getcp(arg0, arg2) == "/") {
      path[arg5] = substr(arg0, arg4, arg2 - 1);
      arg5++;
      arg4 = arg2 + 1;
    }
  }
  return arg4;
}


function getsize {
  local x;
  sys.fs.open(arg0);
  x = sys.fs.size();
  sys.fs.close();
  return x;
}


function rldFiles {
  sys.gui.destroy(file_scr);
  for (x = 0; x < 200; x++;) {
    fScrBtns[x] = 0;
  }

  file_scr = sys.gui.addScreen();

  sys.gui.setScreen(file_scr, scr);
  sys.gui.setXYXY(file_scr, 0, 2, 8, 10);

  i = 0;

  #load directory
  for(findfil = sys.fs.find("", "."); findfil != ""; findfil = sys.fs.findNext();) {
    fScrBtns[i] = findfil;
    i++;
  }

  numOfFiles = i;

  #sortOutDirs
  lastdir = 0;
  for(i = 0; i < numOfFiles; i++;) {
    if (sys.fs.isDir(fScrBtns[i])) {
      prac = fScrBtns[lastdir];

      fScrBtns[lastdir] = fScrBtns[i];

      fScrBtns[i] = prac;

      lastdir++;
    }
  }

  sortstring = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";

  # alphabetical sort dirs
  {
    local sorted;
    local i;
    local b;
    local sortchar;
    sorted = 0;
    for(i = 1; i < len(sortstring); i++;) {
      sortchar = getcp(sortstring, i);
      for(b = sorted; b < lastdir; b++;){
        if (getcp(fScrBtns[b], 1) == sortchar) {
          local prac;
          prac = fScrBtns[b];
          fScrBtns[b] = fScrBtns[sorted];
          fScrBtns[sorted] = prac;
          sorted++;
        }
      }
    }
  }

  # alphabetical sort files
  {
    local sorted;
    local i;
    local b;
    local sortchar;
    sorted = lastdir;
    for(i = 1; i < len(sortstring); i++;) {
      sortchar = getcp(sortstring, i);
      for(b = sorted; b < numOfFiles; b++;){
        if (getcp(fScrBtns[b], 1) == sortchar) {
          local prac;
          prac = fScrBtns[b];
          fScrBtns[b] = fScrBtns[sorted];
          fScrBtns[sorted] = prac;
          sorted++;
        }
      }
    }
  }

  #load sorted buttons
  for(i = 0; i < numOfFiles; i++;) {
    findfil =  fScrBtns[i];
    fScrBtns[i] = sys.gui.addButton(0, i, 5, 1, findfil, file_scr);

    if (sys.fs.isDir(findfil)) {
      sys.gui.addText(6, i, 2, 1, "(Dir)", file_scr);
    } else {
      sys.gui.addText(6, i, 4, 1, "" + getsize(findfil) + "B", file_scr);
    }
  }

  sys.gui.setValue(scrollbar, 0);

  if (i > 9) {
    sys.gui.setParam(scrollbar, 32 * i - 8 * 32);
    sys.gui.setGrayout(scrollbar, 0);
  } else {
    sys.gui.setGrayout(scrollbar, 1);
  }

  selected = -1;
}


function getPath {
  local i;
  local pathStr;
  pathStr = "";
  for (i = 0; i < upCount; i++;) {
    pathStr += path[i] + "/";
    print("" + path[i]);
  }

  return pathStr;
}

function tryOpen {
  selectedFile = getPath()+arg0;
  print("selected: " + selectedFile);
  sys.os.exit();
}


function updFiles {
  local x;
  for (x = 0; x < numOfFiles; x++;) {
    if (sys.gui.getEventC(fScrBtns[x]) == EV_RELEASED) {
        if (selected == -1) {
          sys.gui.setSelect(fScrBtns[x], 1);
          selected = x;
        } else {
        if (selected == x) {
          if (sys.fs.isDir(sys.gui.getStr(fScrBtns[x]))) {
            path[upCount] = sys.gui.getStr(fScrBtns[x]);
            sys.fs.chDir(sys.gui.getStr(fScrBtns[x]));
            rldFiles();
            sys.gui.setGrayout(bUp, 0);
            upCount++;
          } else {
            print ("clicked:" + sys.gui.getStr(fScrBtns[x]));
            tryOpen(sys.gui.getStr(fScrBtns[x]));
          }
        } else {
          sys.gui.setSelect(fScrBtns[selected], 0);
          sys.gui.setSelect(fScrBtns[x], 1);
          selected = x;
        }
      }
    }
  }
}


function update {
  # First thing is to check validity of the overlay
  if (sys.o.getId() != selfOvr) {
    # exit and return if not valid
    sys.os.exit();
    return;
  }
  
  updFiles();

  sys.gui.setYscroll(file_scr, sys.gui.getValue(scrollbar) - 8);

  if (sys.gui.getEventC(bUp) == EV_RELEASED) {
    sys.fs.chDir("..");
    rldFiles();
    upCount--;
    if (upCount == 0){
      sys.gui.setGrayout(bUp, 1);
    }
  }

  if (sys.gui.getEventC(bData) == EV_RELEASED) {
    sys.fs.chDir();
    inApps = 0;
    sys.gui.setSelect(bData, 1);
    sys.gui.setSelect(bApps, 0);
    sys.gui.setGrayout(bUp, 1);
    upCount = 0;
    rldFiles();
  }

  if (sys.gui.getEventC(bApps) == EV_RELEASED) {
    sys.fs.chDir(1);
    inApps = 1;
    sys.gui.setSelect(bData, 0);
    sys.gui.setSelect(bApps, 1);
    sys.gui.setGrayout(bUp, 1);
    upCount = 0;
    rldFiles();
  }

  if (sys.gui.getEventC(btnCancel) == EV_RELEASED) {
    sys.os.exit();
  }
}


function exit {
  sys.os.subRetval(selectedFile, inApps, 0);
}
