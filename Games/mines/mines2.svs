function init {
  scr = sys.gui.addScreen();
  sys.os.gui.setMainScr(scr);
  game = sys.gui.addButton(0, 0, 3, 1, "Game", scr);
  ov_id = 0;
  
  draw_init = 2;
  redraw = 0;
  
  sys.fs.chDir(1);
  sys.fs.chDir("Games/mines/gfx");
  
  grey = sys.ds.mixColor(125, 125, 125);
  
  DA_Y = 68;
  mines_y = 32;
  
  array mf[256];
  
  mines_n = 10;

  init_game();
}

function init_game {
  #reset field
  for(x=0; x<len(mf), x++;){
    mf[x] = 0;
  }
  
  # add mines
  for (x = 0; x<mines_n; x++;){
    rnd = sys.os.rnd() % 256;
    if (mf[rnd] == 0) {
      mf[rnd] = 12;
    }
  }
  
  #face
  face = 0;
  
  dead = 0;
  flag = 0;
  win = 0;
  show_mines = 0;
  flag_n = mines_n;
}

function get_numcol {
  if(arg0 == 1) {
    return sys.ds.mixColor(0, 0, 255);
  }
  if(arg0 == 2) {
    return sys.ds.mixColor(0, 125, 0);
  }
  if(arg0 == 3) {
    return sys.ds.mixColor(255, 0, 0);
  }
  if(arg0 == 4) {
    return sys.ds.mixColor(0, 128, 0);
  }
  if(arg0 == 5) {
    return sys.ds.mixColor(125, 0, 0);
  }
  if(arg0 == 6) {
    return sys.ds.mixColor(0, 125, 125);
  }
  # 7 & 8
  return 0;
}

function draw_img #* x, y, id*# {
  if (mf[arg2]%100 == 0 and redraw == 1) {
    sys.ds.drawImage(arg0, arg1, 1, 1, "tile.p16");
  }
  
  if (mf[arg2]%100 == 11 or mf[arg2]%100 == 13) {
    sys.ds.drawImage(arg0, arg1, 1, 1, "flag.p16");
  }
  
  if (mf[arg2]%100 == 12 and show_mines) {
    sys.ds.drawImage(arg0, arg1, 1, 1, "mine.p16");
  }
  
  if (mf[arg2]%100 == 13 and show_mines) {
    sys.ds.drawImage(arg0, arg1, 1, 1, "mine.p16");
    sys.ds.drawLine(arg0 + 3, arg1 + 3, arg0 + 17, arg1 + 17, sys.ds.mixColor(255, 0, 0));
    sys.ds.drawLine(arg0 + 17, arg1 + 3, arg0 + 3, arg1 + 17, sys.ds.mixColor(255, 0, 0));
  }
  
  if (mf[arg2]%100 == 12 and not show_mines) {
    sys.ds.drawImage(arg0, arg1, 1, 1, "tile.p16");
  }
  
  if (mf[arg2]%100 < 10 and mf[arg2]%100 > 0){
    sys.ds.fillRect(arg0 + 1, arg1 + 1, arg0 + 19, arg1+19, sys.ds.mixColor(200, 200, 200));
    sys.ds.drawText(arg0 + 5, arg1 + 2, "" + mf[arg2]%100, get_numcol(mf[arg2]%100));
  }
  
  if (mf[arg2]%100 <= 10 and mf[arg2]%100 > 0) {
    if (mf[arg2]%100 == 10) {
      sys.ds.fillRect(arg0 + 1, arg1 + 1, arg0 + 19, arg1+19, sys.ds.mixColor(200, 200, 200));
    }
    #sys.ds.drawLine(arg0, arg1, arg0 + 20, arg1, grey);
    sys.ds.drawLine(arg0, arg1+20, arg0+20, arg1+20, grey);
    sys.ds.drawLine(arg0+20, arg1, arg0+20, arg1+20, grey);
    #sys.ds.drawLine(arg0, arg1, arg0, arg1+20, grey);
  }
  
  #*if (mf[arg2]/100 == 1 ){
    sys.ds.drawText(arg0 + 5, arg1 + 2, "U", 0);
  }*#
}


function redraw {
  
  if (sys.os.getRedraw()){
    redraw = 1;
  }

  if (draw_init > 0) {
    draw_init--;
    redraw = 1;
  }

  if (redraw == 0) {
    return;
  }
  
  #print("redraw: "+ redraw + " os: "+sys.os.getRedraw());

  sys.ds.setArea(0, DA_Y, 318, 440);

  if (redraw == 1) {
    sys.ds.clearArea(sys.ds.mixColor(200, 200, 200));
  }
  
  if (face == 0){
    sys.ds.drawImage(144, 0, 1, 1, "face.p16");
  }
  
  if (face == 1){
    sys.ds.drawImage(144, 0, 1, 1, "click.p16");
  }
  if (face == 2){
    sys.ds.drawImage(144, 0, 1, 1, "dead.p16");
  }
  if (face == 3){
    sys.ds.drawImage(144, 0, 1, 1, "win.p16");
  }
  
  if (flag) {
    sys.ds.drawImage(190, 8, 1, 1, "flag2.p16");
  } else {
    sys.ds.drawImage(190, 8, 1, 1, "flag.p16");
  }
  
  if (redraw == 2) {
    redraw=0;
    return;
  }
  
  if (redraw == 3) {
  sys.ds.fillRect(30, 8, 60, 32, sys.ds.mixColor(200, 200, 200));
  }
  sys.ds.drawText(30, 8, "" + flag_n, sys.ds.mixColor(255, 0, 0));
  sys.ds.drawLine(0, 32, 320, 32, grey);
  
  for (y = 0; y < 16; y++;) {
    for (x = 0; x < 16; x++;) {
      draw_img(20*x, 20*y + mines_y, y*16 + x);
    }
  }
  
  redraw = 0;
}

function get_cell {
  if (mf[arg0]%100 == 12 or mf[arg0]%100 == 13) {
    return 1;
  }
  
  return 0;
}

function select_cell {
  if (mf[arg0] == 0){
    mf[arg0] = mf[arg0]/100 + 100;
  }
}

function update_cell {
  local x;
  local y;
  local count;
  
  x = arg0%16;
  y = arg0/16;
  
  count = 0;
  
  if (x != 0) {
    count += get_cell(y*16+(x-1));
  }
  
  if (x != 15) {
    count += get_cell(y*16+(x+1));
  }
  
  if (y != 0) {
    count += get_cell((y - 1)*16+x);
  }
  
  if (y != 15) {
    count += get_cell((y + 1)*16+x);
  }
  
  if (x != 0 and y != 0) {
    count += get_cell((y - 1)*16+(x-1));
  }
  
  if (x != 15 and y != 0) {
    count += get_cell((y - 1)*16+(x+1));
  }
  
  if (x != 0 and y != 15) {
    count += get_cell((y + 1)*16+(x-1));
  }
  
  if (x != 15 and y != 15) {
    count += get_cell((y + 1)*16+(x+1));
  }
  
  if (count == 0){
    mf[y*16+(x)] = 10;
    # select neighbours for update
    if (x != 0) {
      select_cell(y*16+(x-1));
    }
    
    if (x != 15) {
      select_cell(y*16+(x+1));
    }
    
    if (y != 0) {
      select_cell((y - 1)*16+x);
    }
    
    if (y != 15) {
      select_cell((y + 1)*16+x);
    }
    
    if (x != 0 and y != 0) {
      select_cell((y - 1)*16+(x-1));
    }
    
    if (x != 15 and y != 0) {
      select_cell((y - 1)*16+(x+1));
    }
    
    if (x != 0 and y != 15) {
      select_cell((y + 1)*16+(x-1));
    }
    
    if (x != 15 and y != 15) {
      select_cell((y + 1)*16+(x+1));
    }
    
  } else {
    # set number
    mf[y*16+(x)] = count;
  }
  
  
}

function update_field {
  for(x=0; x<len(mf);x++;){
    if (mf[x]/100) {
      mf[x] = mf[x]%100;
      update_cell(x);
      redraw = 3;
    }
  }
  
  # check for winning condition
  local w;
  w = 1;
  for(x=0; x<len(mf);x++;) {
    if (mf[x]%100 == 0) {
      w = 0;
      break;
    }
  }
  
  local w2;
  w2 = 1;
  for(x=0; x<len(mf);x++;) {
    if (mf[x]%100 == 11 or mf[x]%100 == 12) {
      w2 = 0;
      break;
    }
  }
  
  if (w or w2) {
    face = 3;
    win = 1;
  }
}


function update {
  redraw();
  
  if (sys.o.getId() == ov_id and sys.o.getId() != 0) {
    handle_overlay();
    sys.ds.touchClr();
  }
  
  if (draw_init > 0) {
    sys.ds.touchClr();
  }
  
  if (sys.ds.touchEv() == EV_PRESSED) {
    touchX = sys.ds.touchX();
    touchY = sys.ds.touchY() - DA_Y;
    redraw = 2; # just face
    
    # test minefield for click
    if (touchY > mines_y and touchY < mines_y + 320 and not dead and not flag and not win) {
      face = 1;
    }
  }
  
  if (sys.ds.touchEv() == EV_RELEASED) {
    touchX = sys.ds.touchX();
    touchY = sys.ds.touchY() - DA_Y;
    redraw = 3;
    
    # test minefield for click
    if (not dead and not win) {
      for (y = 0; y < 16; y++;) {
        for (x = 0; x < 16; x++;) {
          if(touchX > 20*x and touchX < 20*(x+1) and touchY > 20*y + mines_y and touchY < 20*(y+1) + mines_y) {
            print("touched: " + (y*16+x));
            if (not flag) {
              # stumbled upon a mine
              if (mf[y*16+x] == 12) {
                face = 2;
                dead = 1;
                show_mines = 1;
                redraw = 1;
              } else {
                face = 0;
                redraw = 1;
              }
              
              # empty? update cell
              if (mf[y*16+x] == 0) {
                update_cell(y*16+x);
              }
            } else {
              # place flag
              if (mf[y*16+x] == 12) {
                mf[y*16+x] = 13;
                flag_n--;
              } else {
                if (mf[y*16+x] == 13) { 
                  mf[y*16+x] = 12;
                  flag_n++;
                }
              }
              if (mf[y*16+x] == 11) { 
                mf[y*16+x] = 0;
                flag_n++;
                redraw = 1;
              } else {
                if (mf[y*16+x] == 0) { 
                  mf[y*16+x] = 11;
                  flag_n--;
                }
              }
            }
          }
        }
      }
      
      # flag select
      if (touchX > 190 and touchX < 220 and touchY > 8 and touchY < 28) {
        flag = 1 - flag;
        redraw = 2;
      }
    } else {
      if (touchX > 144 and touchX < 176 and touchY > 0 and touchY < 32) {
        redraw = 1;
        init_game();
      }
    }
  }
  
  if (sys.gui.getEventC(game) == EV_RELEASED) {
    init_overlay();
    ov_id = sys.o.setScr(ov_screen);
    sys.o.setY(250);
  }
  
  sys.ds.touchClr();
  update_field();
}


function init_overlay {
  sys.gui.setRelInit(1);
  ov_screen = sys.gui.addScreen();
  sys.gui.addText(0, 0, 8, 1, "Set the number of mines", ov_screen);
  t_mines = sys.gui.addText(2, 2, 1, 1, "" + mines_n, ov_screen);
  b_m = sys.gui.addButton(4, 2, 1, 1, "-", ov_screen);
  b_p = sys.gui.addButton(5, 2, 1, 1, "+", ov_screen);
  
  b_ok = sys.gui.addButton(5, 4, 2, 1, "Ok", ov_screen);
  b_cancel = sys.gui.addButton(1, 4, 3, 1, "Cancel", ov_screen);
  
  o_mines_n = mines_n;
}

function handle_overlay {
  if (sys.gui.getEventC(b_m) == EV_RELEASED and o_mines_n > 3) {
    o_mines_n--;
    sys.gui.setStr(t_mines, ""+o_mines_n);
  }
  
  if (sys.gui.getEventC(b_p) == EV_RELEASED) {
    o_mines_n++;
    sys.gui.setStr(t_mines, ""+o_mines_n);
  }
    
  if (sys.gui.getEventC(b_ok) == EV_RELEASED) {
      mines_n = o_mines_n;
      sys.o.destroy();
      init_game();
      return;
  }
  
  if (sys.gui.getEventC(b_cancel) == EV_RELEASED) {
    sys.o.destroy();
    return;
  }
}
