function init {
  print("ArkanoidV1");
  scr = sys.gui.addScreen();
  sys.os.gui.setMainScr(scr);

  newgame = sys.gui.addButton(4,0, 8, 1, "New game!", scr );

  sys.gui.addText(0, 0, 4, 1, "Arkanoid!", scr);

  red = sys.ds.mixColor(255, 0, 0);

  blue = sys.ds.mixColor(0, 0, 255);

  white = sys.ds.mixColor(255, 255, 255);

  # blocks Array
  array blArr[50];

  game_reset();
}

function game_reset{
  win = 0;

  sys.gui.setVisible(newgame, 0);

  paddle_x = 140;
  paddle_y = 300;

  paddle_x_old = paddle_x;
  paddle_y_old = paddle_y;

  ball_x = 162;
  ball_y = 280;

  ball_x_old = ball_x;
  ball_y_old = ball_y;

  ball_hsp = 1;
  ball_vsp = 5;

  pspeed = 7;

  for(x = 0; x < 50; x = x + 1;) {
    blArr[x] = sys.ds.mixColor(25 + sys.os.rnd()%220, 25 + sys.os.rnd()%220, 25 + sys.os.rnd()%220);
  }

  redraw = 2;

  redrawAll = 6;

  redraw_score = 1;

  started = 0;

  score = 0;

  lives = 3;
}

function redraw{

  sys.ds.setArea(0, 64, 318, 440);

  if(redrawAll > 2) {
    sys.ds.clearArea(0);
    redrawAll = redrawAll - 1;
    redraw = 1;
    redraw_score = 1;
    redraw_boxes = 1;
  }

  if (redraw == 0){
    return;
  }

  # paddle
  sys.ds.fillRect(paddle_x_old, paddle_y_old , paddle_x_old + 50, paddle_y_old + 16, 0);
  sys.ds.fillRect(paddle_x, paddle_y, paddle_x + 50, paddle_y + 16, red);

  # ball
  sys.ds.fillRect(ball_x_old - 8, ball_y_old - 8, ball_x_old + 8, ball_y_old + 8, 0);
  sys.ds.fillCircle( ball_x, ball_y, 8, white);

  # boxes
  if (redraw_boxes == 1) {
    for(x = 0; x < 50; x = x + 1;) {
      if (blArr[x] != 0 ) {
        sys.ds.fillRect(0 + (x%10) * 32 , 50 + (x/10)*20, 32 + (x%10)*32, 70 + (x/10)*20, blArr[x]);
      }
    }
    redraw_boxes = 0;
  }

  if (redraw_score) {
    redraw_score = 0;
    sys.ds.fillRect(0, 336, 320, 376, white);
    sys.ds.drawText(90, 346, "Score:", 0);
    sys.ds.drawText(175, 346, "" + score, red);

    for(x = 0; x < lives; x = x + 1;){
      sys.ds.drawCircle(260 + x*18, 352, 8, 0);
    }
  }
  redraw = 0;
}

function update {
  if (sys.os.getRedraw()){
    redrawAll = 7;
  }
  if (win == 0){
    if (sys.hw.btn.getEvent(BTN_LEFT)) {
      paddle_x_old = paddle_x;
      paddle_x = paddle_x - pspeed;
      redraw = 1;
      if (paddle_x < 0) {
        paddle_x = 0;
      }
      started = 1;
    }
    sys.hw.btn.clrEvent(BTN_LEFT);

    if (sys.hw.btn.getEvent(BTN_RIGHT)) {
      paddle_x_old = paddle_x;
      paddle_x = paddle_x + pspeed;
      redraw = 1;
      if (paddle_x > 269) {
        paddle_x = 269;
      }
      started = 1;
    }
    sys.hw.btn.clrEvent(BTN_RIGHT);

  } else {
    if (sys.gui.getEvent(newgame) == EV_PRESSED) {
      game_reset();
    }
    sys.gui.setEvent(newgame, EV_NONE);
  }

  if (started) {

    # ball logic
    ball_x_old = ball_x;
    ball_y_old = ball_y;
    ball_x = ball_x + ball_hsp;
    ball_y = ball_y + ball_vsp;

    # boundaries
    if (ball_x < 8) {
      ball_hsp = ball_hsp * (-1);
      #randomize();
    }

    if (ball_x > 310) {
      ball_hsp = ball_hsp * (-1);
      #randomize();
    }

    if (ball_y < 8) {
      ball_vsp = ball_vsp * (-1);
      #randomize();
    }

    # paddle
    if ((ball_y + 9) > paddle_y) {
      if ((ball_x > paddle_x) * ((ball_x < (paddle_x + 50)))) {
        ball_vsp = ball_vsp * (-1);
        prac = ball_x - paddle_x - 8;

        if ((prac < 10)+((prac > 40)*(prac < 50))) {
          if (ball_hsp > 0) {
            if (ball_hsp < 4)
            ball_hsp = ball_hsp + 2;
          } else {
            if (ball_hsp > (-4))
            ball_hsp = ball_hsp - 2;
          }
          ball_hsp = ball_hsp * (-1);
        }

        if (((prac > 10)*(prac < 20))+((prac > 30)*(prac < 40))) {
          if (ball_hsp > 0) {
            if (ball_hsp < 4)
            ball_hsp = ball_hsp + 1;
          } else {
            if (ball_hsp > (-4))
            ball_hsp = ball_hsp - 1;
          }
        }
        if ((prac > 20)*(prac < 30)) {
          if (ball_hsp > 0) {
            ball_hsp = ball_hsp - 1;
          } else {
            ball_hsp = ball_hsp + 1;
          }
        }
        ball_y = paddle_y - 8;
      }
      if (ball_y > 328) {
        lives = lives - 1;
        score = score - 50;
        redraw_score = 1;
        ball_x = paddle_x + 15;
        ball_y = paddle_y - 8;
        ball_hsp = 0;
        ball_vsp = 5;
        started = 0;
      }
    }

    # blocks
    block_exist = 0;
    for(x = 0; x < 50; x = x + 1;) {
      if (blArr[x] != 0 ) {
        block_exist = 1;
        y1 = 50 + (x/10)*20;
        y2 = 20 + y1;
        x1 = ((x%10) * 32);
        x2 = x1 + 32;
        if ((ball_y > y1) * (ball_y < y2)) {
          if ((ball_x > x1) * (ball_x < x2)) {
            if ((ball_y > y1 + 15) * (ball_y < y2)) {
              ball_vsp = ball_vsp * (-1);
            } else {
              if ((ball_y > y1) * (ball_y < y1 + 5)) {
                ball_vsp = ball_vsp * (-1);
              } else {
                if ((ball_x > x1) * (ball_x < x1 + 5)) {
                  ball_hsp = ball_hsp * (-1);
                }else {
                  if ((ball_x > (x1 + 27)) * (ball_x < x2)) {
                    ball_hsp = ball_hsp * (-1);
                  }
                }
              }
            }
            score = score + 10;
            redraw_score = 1;
            blArr[x] = 0;
            sys.ds.fillRect(x1 , y1, x2, y2, 0);
            #randomize();
          }
        }

      }
    }

    if ((block_exist != 1) * (win == 0)) {
      win = 1;
      ball_vsp = 0;
      ball_hsp = 0;
      sys.ds.fillRect(0, 336, 320, 376, white);
      sys.ds.drawText(35, 346, "You Won! Final score:", 0);
      sys.ds.drawText(255, 346, "" + score, red);
      sys.gui.setVisible(newgame, 1);
    }

    if ((lives == 0) * (win == 0)) {
      win = 1;
      redraw_score = 0;
      ball_vsp = 0;
      ball_hsp = 0;
      sys.ds.fillRect(0, 336, 320, 376, white);
      sys.ds.drawText(35, 346, "You Lost! Final score:", 0);
      sys.ds.drawText(255, 346, "" + score, red);
      sys.gui.setVisible(newgame, 1);
    }

    redraw = 1;
  }

  redraw();
}
#*
function randomize{
  print ("prev h:" + ball_hsp + " v: "+ ball_vsp);
  if (ball_hsp > 0){
    if (ball_hsp < 4) {
      ball_hsp = ball_hsp + sys.os.rnd() % 2;
    } else {
      ball_hsp = ball_hsp - sys.os.rnd() % 2;
    }
  }  else {
    if (ball_hsp > -4) {
      ball_hsp = ball_hsp - sys.os.rnd() % 2;
    } else {
      ball_hsp = ball_hsp + sys.os.rnd() % 2;
    }
  }
  if (ball_vsp > 0){
    if (ball_vsp < 4) {
      ball_vsp = ball_vsp + sys.os.rnd() % 2;
    } else {
      ball_vsp = ball_vsp - sys.os.rnd() % 2;
    }
  }  else {
    if (ball_vsp > -4) {
      ball_vsp = ball_vsp - sys.os.rnd() % 2;
    } else {
      ball_vsp = ball_vsp + sys.os.rnd() % 2;
    }
  }
  print ("after h:" + ball_hsp + " v: "+ ball_vsp);
}
*#
