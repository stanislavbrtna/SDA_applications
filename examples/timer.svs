#*
  Systen timers have been introduced in v. 0.9.
  When set, the timer will count to zero and then it will woke the app
  (if the app is in background, more on app states in docs)
  and call the given callback. If sys.os.arise() is called in that callback,
  then after the callback returns app will be put to the foreground.
  
  If the app is closed (or the pda reseted, etc.) during the timer countdown,
  the app state and timer are lost and the callback wont be called.
  If you need that kind of functionality, use alarms.

*#

function init {
  # setup screen and basic gui
  scr = sys.gui.addScreen();
  sys.os.gui.setMainScr(scr);
  text = sys.gui.addText(1, 1, 8, 2, "Hello, world!", scr);
  set_timer = sys.gui.addButton(1, 3, 8, 4, "set timer (beep)", scr);
  set_timer2 = sys.gui.addButton(1, 5, 8, 6, "set timer (wkup)", scr);
}

function update {
  #button handling
  if (sys.gui.getEventC(set_timer) == EV_RELEASED) {
    sys.time.setTimer(10000, &callback);
  }
  if (sys.gui.getEventC(set_timer2) == EV_RELEASED) {
    sys.time.setTimer(10000, &callback2); #different callback is used
  }
}

function callback {
  sys.gui.setStr(text, "called back!");
  print("called");
  sys.snd.beep(); # this will beep on the background
}

function callback2 {
  sys.gui.setStr(text, "called back2!");
  print("called2");
  sys.os.arise(); # this will wake the app from background
}
